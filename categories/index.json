[{"content":"Rust Open-source language; 6000 contributors. MIT and Apache License\nhttps://doc.rust-lang.org https://play.rust-lang.org 1 2 3 fn main() { println!(\u0026#34;Hello!\u0026#34;); } rustc main.rs // create main.exe\nmain.exe\nCreating projects:\ncargo new hello\nstructure created: /src/main.rs /.toml (dependencies), /.gitignore\ncargo run\ncargo run build\nFocuses to be safe, secure, concurrent with combination of\nStatic typing: prevent errors at compile time\ncompiler is very strict: reliable and have fewer bugs\nit catches a lot of errors that would normally go unnoticed: no never used variable possible Dynamic typing: flexibility and easier refactoring Ownership and borrowing: ensure that data is accessed safely and efficiently Modern syntax and design, a mixture of assembler and a functional programming language, and it looks very strange to the uninitiated. Like C++, it supports low-level code, high performance, and direct memory access. Rust doesn\u0026rsquo;t have classes: use custom data types (structs..) to represent types of objects Rust code uses snake case for function and variable names\nall letters are lowercase and underscores separate words ","description":"","id":0,"section":"posts","tags":null,"title":"About rust lang","uri":"https://guinetn.github.io/posts/rust/"},{"content":"#-#\n#-# Pointcut\n#-#\nA pointcut is a program element that picks out join points and exposes data from the execution context of those join points. Pointcuts are used primarily by advice. They can be composed with boolean operators to build up other pointcuts. any type and number of args ─┐\rmethod ─┐ │\rclass ─┐ │ │\r│ │ │\r@Pointcut(\u0026ldquo;execution(public * com.demo..(..))\u0026rdquo;)\n│ │ │\n│ │ └─ any return type\n│ └─ access modifier\n└─ designator\n#-# Pointcut designators\nType Designator Description\nmethod call The pointcut will find all methods that calls a method in the demo package.\nmethod execution The pointcut will find all methods in the demo package.\nmethod withincode All the statements inside the methods in the demo package.\ntype within All statements inside the a class that ends with Test.\nfield get All reads to jdbcTemplate fields of type JdbcTemplate in the integration.db package. Includes all methods on this field if it’s an object.\nfield set When you set the jdbcTemplate field of type JdbcTemplate in the integration.db package to a new value.\n@Pointcut(\u0026quot;[method designator](* aspects.trace.demo..(..))\u0026quot;)\npublic void traceMethodsInDemoPackage() {}\n@Pointcut(\u0026quot;type designator\u0026quot;)\npublic void inTestClass() {}\n@Pointcut(\u0026quot;[field designator](private org.springframework.jdbc.core.JdbcTemplate integration.db.*.jdbcTemplate)\u0026quot;)\npublic void jdbcTemplateGetField() {}\n","description":"","id":1,"section":"cheatsheets","tags":null,"title":"aop.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/paradigm/aop.cheatsheet/"},{"content":"#-#\n#-# Source code comments\n#-#\nParameter dezambiguation ┌─ execute with superuser rights\n│ ┌─ change file mode\n│ │ ┌─ path to file\nsudo chmod a+rx file\n│ │└─ execution right\n│ └─ read right\n└─ all users\n#-#\n#-# Command line display\n#-#\nStatuses [?] - unknown\n[✔] - success\n[✖] - failure\nDirectory tree root\n├── CVS\n│ ├── Entries\n│ ├── Repository\n│ └── Root\n├── Makefile\n├── foo\n│ └── bar\n├── tree.1\n└── tree.c\n#-#\n#-# Shapes\n#-#\n┌ ─ ─ ─ ─ ┐\n│ box │\n└ ─ ─ ─ ─ ┘\n#-#\n#-# Ascii table\n#-#\n#-#\n#-# Sources\n#-#\nhttp://graphemica.com\n","description":"","id":2,"section":"cheatsheets","tags":null,"title":"asciiart.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/misc/asciiart.cheatsheet/"},{"content":"#-#\n#-# Operations\n#-#\n#-# Transfer\nName Comment Code Operation O D I T S Z A P C\nMOV Move (copy) MOV dest,source dest:=source . . . . . . . . .\nXCHG Exchange XCHG op1,op2 op1:=op2, op2:=op1 . . . . . . . . .\nSTC Set carry STC CF:=1 . . . . . . . . 1\nCLC Clear carry CLC CF:=0 . . . . . . . . 0\nCMC Complement carry CMC CF:=-CF . . . . . . . . ±\nSTD Set direction STD DF:=1 (string op\u0026rsquo;s downwards) . 1 . . . . . . .\nCLD Clear direction CLD DF:=0 (string op\u0026rsquo;s upwards) . 0 . . . . . . .\nSTI Set interrupt STI IF:=1 . . 1 . . . . . .\nCLI Clear interrupt CLI IF:=0 . . 0 . . . . . .\nPUSH Push onto stack PUSH source DEC SP, [SP]:=source . . . . . . . . .\nPUSHF Push flags PUSHF O D I T S Z A P C 286+: also NT, IOPL . . . . . . . . .\nPUSHA Push all general flags POPA DI, SI, BP, SP, BX, DX, CX, AX . . . . . . . . .\nPOP Pop from stack POP dest dest:=[SP], INC SP . . . . . . . . .\nPOPF Pop flags POPF O D I T S Z A P C 286+: also NT, IOPL ± ± ± ± ± ± ± ± ±\nPOPA Pop all general registers POPA DI, SI, BP, SP, BX, DX, CX, AX . . . . . . . . .\nCBW Convert byte to word CBW AX:=AL (signed) . . . . . . . . .\nCWD Convert word to double CWD DX:AD:=AX (signed) ± . . . ± ± ± ± ±\nCWDE Conv word to extended double CWDE EAX:=AX (signed) . . . . . . . . .\nIN i Input IN dest,port AL/AX/EAX:=byte/word/double of port . . . . . . . . .\nOUT i Output OUT port,source Byte/word/double of port:=AL/AX/EAX . . . . . . . . .\n#-# Arithmetic\nName Comment Code Operation O D I T S Z A P C\nADD Add ADD dest,source dest:=dest+source ± . . . ± ± ± ± ±\nADC Add with carry ADC dest,source dest:=dest+source+CF ± . . . ± ± ± ± ±\nSUB Substract SUB dest,source dest:=dest-source ± . . . ± ± ± ± ±\nSBB Substract with borrow SBB dest,source dest:=dest-(source+CF) ± . . . ± ± ± ± ±\nDIV Divide (unsigned) DIV op op=byte: AL:=AX/op AH:=rest ? . . . ? ? ? ? ?\nDIV Divide (unsigned) DIV op op=word: AX:=DX:AX/op DX:=rest ? . . . ? ? ? ? ?\nDIV 386 Divide (unsigned) DIV op op=doublew: EAX:=EDX:EAX/op EDX:=rest ? . . . ? ? ? ? ?\nIDIV Signed integer divider IDIV op op=byte: AL:=AX/op AH:=rest ? . . . ? ? ? ? ?\nIDIV Signed integer divider IDIV op op=word: AX:=DX:AX/op DX:=rest ? . . . ? ? ? ? ?\nIDIV 386 Signed integer divider IDIV op op=doublew: EAX:=EDX:EAX/op EDX:=rest ? . . . ? ? ? ? ?\nMUL Multiply (unsigned) MUL op op=byte: AX:=ALop if AH=0 ♦ ± . . . ? ? ? ? ±\nMUL Multiply (unsigned) MUL op op=word: DX:AX:=AXop if DX=0 ♦ ± . . . ? ? ? ? ±\nMUL 386 Multiply (unsigned) MUL op op=double: EDX:EAX:=EAX/op if EDX=0 ♦ ± . . . ? ? ? ? ±\nIMUL i Signed integer multiply IMUL op op=byte: AX:=ALop if AL suff ♦ ± . . . ? ? ? ? ±\nIMUL Signed integer multiply IMUL op op=word: DC:AX:=AXop if AX suff ♦ ± . . . ? ? ? ? ±\nIMUL 386 Signed integer multiply IMUL op op=double: EDX:EAX:=EAX*op if EAX . ♦ ± . . . ? ? ? ? ±\nINC Increment INC op op:=op+1 (carry not affected) ± . . . ± ± ± ± .\nDEC Decrement DEC op op:=op-1 (carry not affected) ± . . . ± ± ± ± .\nCMP Compare CMP op1,op2 op1-op2 ± . . . ± ± ± ± ±\nSAL Shift arithmetic left SAL op,quantity i . . . ± ± ? ± ±\nSAR Shift arithmetic right SAR op,quantity i . . . ± ± ? ± ±\nRCL Rotate left through carry RCL op,quantity i . . . . . . . ±\nRCR Rotate right through carry RCR op,quantity i . . . . . . . ±\nROL Rotate left ROL op,quantity i . . . . . . . ±\nROR Rotate right ROR op,quantity i . . . . . . . ±\n#-# Logic\nName Comment Code Operation O D I T S Z A P C\nNEG Negate (two-complement) NEG op op:=0-op if op=0 then CF:=0 else CF:=1 ± . . . ± ± ± ± ±\nNOT Invert each bit NOT op op:=¬op (invert each bit) . . . . . . . . .\nAND Logical and AND dest,source dest:=dest∧source 0 . . . ± ± ? ± 0\nOR Logical or OR dest, source dest:=dest∨source 0 . . . ± ± ? ± 0\nXOR Logical exclusive or XOR dest, source dest:=dest (xor) source 0 . . . ± ± ? ± 0\nSHL Shift logical left SHL op, quality i . . . ± ± ? ± ±\nSHR Shift logical right SHR op, quality i . . . ± ± ? ± ±\n#-# Misc\nName Comment Code Operation O D I T S Z A P C\nNOP No operation NOP No operation . . . . . . . . .\nLEA Load effective address LEA dest, source dest:=address of source . . . . . . . . .\nINT Interrupt INT nr interrupts prog, runs spec int-prog . . 0 0 . . . . .\n#-# Legend\nSymbol Description\n♦ Then CF:=0, OF:=0 else CF:=1, OF:=1\n. Blank\ni For more information se instruction specifications\n± Affected by this instruction\n? Undefined after this instruction\n#-#\n#-# Jumps\n#-#\nBasic (flags remain unchanged) Name Comment Code Operation\nCALL Call subroutine CALL proc\nRET Return from subroutine RET\nJMP Jump JMP dest\nJE Jump if equal JE dest ≡ JZ\nJZ Jump if zero JZ dest ≡ JE\nJCXZ Jump if CX is zero JCXZ dest\nJECXZ Jump if ECX is zero JECXZ dest\nJP Jump if parity (parity even) JP dest ≡ JPE\nJPE Jump if parity even JPE dest ≡ JP\nJPO Jump if parity odd JPO dest ≡ JNP\nJNE Jump if not equal JNE dest ≡ JNZ\nJNZ Jump if not zero JNZ dest ≡ JNE\nJNP Jump if no parity (parity odd) JNP dest ≡ JPO\nUnsigned (cardinal) Name Comment Code Operation\nJA Jump if above JA dest ≡ JNBE\nJAE Jump if above or equal JAE dest ≡ JNB ≡ JNC\nJB Jump if below JB dest ≡ JNAE ≡ JC\nJBE Jump if below or equal JBE dest ≡ JNA\nJC Jump if carry JC dest\nJNA Jump if not above JNA dest ≡ JBE\nJNAE Jump if not above or equal JNAE dest ≡ JB ≡ JC\nJNB Jump if not below JNB dest ≡ JAE ≡ JNC\nJNBE Jump if not below or equal JNBE dest ≡ JA\nJNC Jump if no carry JNC dest\nSigned (integer) Name Comment Code Operation\nJG Jump if greater JG dest ≡ JNBE\nJGE Jump if greater or equal JGE dest ≡ JNL\nJL Jump if less JL dest ≡ JNGE\nJLE Jump if less or equal JLE dest ≡ JNG\nJO Jump if overflow JO dest\nJS Jump if sign (= negative) JS dest\nJNG Jump if not greater JNG dest ≡ JLE\nJNGE Jump if not greater or equal JNGE dest ≡ JL\nJNL Jump if not less JNL dest ≡ JGE\nJNLE Jump if ont less or equal JNLE dest ≡ JG\nJNO Jump if no overflow JNO dest\nJNS Jump if no sign (= positive) JNS dest\n#-#\n#-# General registers\n#-#\nEAX 386\r│ AX\r│ AH │ AL\r┌────────┬──────────┼──────────┼──────────┐\n│ │ │ │ │ Accumulator\n└────────┴──────────┴──────────┴──────────┘\n31 24 23 16 15 8 7 0\nEDX 386\r│ DX\r│ DH │ DL\r┌────────┬──────────┼──────────┼──────────┐\n│ │ │ │ │ Data mul, div, IO\n└────────┴──────────┴──────────┴──────────┘\n31 24 23 16 15 8 7 0\nECX 386\r│ CX\r│ CH │ CL\r┌────────┬──────────┼──────────┼──────────┐\n│ │ │ │ │ Count loop, shift\n└────────┴──────────┴──────────┴──────────┘\n31 24 23 16 15 8 7 0\nEBX 386\r│ BX\r│ BH │ BL\r┌────────┬──────────┼──────────┼──────────┐\n│ │ │ │ │ BaseX data ptr\n└────────┴──────────┴──────────┴──────────┘\n31 24 23 16 15 8 7 0\n#-#\n#-# Flags\n#-#\n┌───┬───┬───┬───┬───┬───┬───┬───┐ ┌───┬───┬───┬───┬───┬───┬───┬───┐\n│ _ │ _ │ _ │ _ │ O │ D │ I │ T │ │ S │ Z │ _ │ A │ _ │ P │ _ │ C │\n└───┴───┴───┴───┴───┴───┴───┴───┘ └───┴───┴───┴───┴───┴───┴───┴───┘\n#-# Control (how instructions are carried out)\nFlag Name Comment\nD Direction 1 = String op\u0026rsquo;s process down from high to low address\nI Interrupt Whether interrupts can occur. 1 = enabled\nT Trap Single step for debugging\n#-# Status (result of operations)\nFlag Name Comment\nC Carry Result of unsigned op. is too large or below zero. 1 = carry/borrow\nO Overflow Result of signed op. is too large or small. 1 = overflow/underflow\nS Sign Sign of result. Reasonable for integer only. 1 = neg / 0 = pos\nZ Zero Result of opertation is zero. 1 = zero\nA Aux. carry Similar to carry but restricted to low nibble only\nP Parity 1 = result has even number of set bits\n#-#\n#-# Example\n#-#\n; Project Euler Problem #001\n; \u0026mdash;\u0026ndash;\n; If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.\n; The sum of these multiples is 23.\n; Find the sum of all the multiples of 3 or 5 below 1000.\n; Designed for OS X.\n; To assemble and run:\n; nasm -f macho project_euler_001.asm ; \u0026amp;\u0026amp; ld -o project_euler_001 project_euler_001.o -arch i386 -lc -macosx_version_min 10.6 ; \u0026amp;\u0026amp; ./project_euler_001\nsection .data\nformat db \u0026ldquo;%i\u0026rdquo;, 10, 0 ; printf output format\nsection .text\nglobal start ; make entry point visible from outside\nextern _printf ; make the external function available\nstart:\nand esp, 0xFFFFFFF0 ; round the stack pointer to the nearest multiple of 16\nsub esp, 16 ; we only need room for 2 stack args, but we create space for 4 to keep the stack aligned\nmov dword[esp], format ; put the printf format as the 1st element in the stack\nmov ebx, 0 ; sum\nmov ecx, 1 ; counter\nmov esi, 3 ; 1st divisor\nmov edi, 5 ; 2nd divisor\njmp for ; jump to the for loop\nfor:\ncmp ecx, 1000 ; did the counter reach 1000 yet?\nje finish ; if so, we\u0026rsquo;re done\n; check if multiple of 3\rmov eax, ecx ; set the current counter value as the dividend\rxor edx, edx ; clear the remainder register\rdiv esi ; divide eax by esi and store the quotient:remainder in eax:edx\rcmp edx, 0 ; is the remainder zero?\rje multiple ; if so, go update the result\r; check if multiple of 5\rmov eax, ecx ; set the current counter value as the dividend\rxor edx, edx ; clear the remainder register\rdiv edi ; divide eax by edi and store the quotient:remainder in eax:edx\rcmp edx, 0 ; is the remainder zero?\rje multiple ; if so, go update the result\rinc ecx ; increment counter\rjmp for ; next iteration\rmultiple:\nadd ebx, ecx ; add current element to the sum\ninc ecx ; increment counter\njmp for ; next iteration\nfinish:\nmov dword[esp + 4], ebx ; put ebx as the 2nd element in the stack\ncall _printf ; call printf with the elements from the stack as arguments: printf(format, ebx)\nmov eax, 0x1 ; exit command to kernel\nmov ebx, 0x0 ; exit code\nint 0x80 ; make system call\n","description":"","id":3,"section":"cheatsheets","tags":null,"title":"assembler.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/assembler.cheatsheet/"},{"content":"#-#\n#-# Variables\n#-#\n#-# String manipulation\nCommand Description\n${varname:-word} If varname exists and isn\u0026rsquo;t null, return its value; otherwise return word\n${varname:=word} If varname exists and isn\u0026rsquo;t null, return its value; otherwise set it word and then return its value\n${varname:?message} If varname exists and isn\u0026rsquo;t null, return its value; otherwise print varname, followed by message and abort the current command or script\n${varname:+word} If varname exists and isn\u0026rsquo;t null, return word; otherwise return null\n${varname:offset:length} Performs substring expansion. It returns the substring of $varname starting at offset and up to length characters\n${variable#pattern} If the pattern matches the beginning of the variable\u0026rsquo;s value, delete the shortest part that matches and return the rest\n${variable##pattern} If the pattern matches the beginning of the variable\u0026rsquo;s value, delete the longest part that matches and return the rest\n${variable%pattern} If the pattern matches the end of the variable\u0026rsquo;s value, delete the shortest part that matches and return the rest\n${variable%%pattern} If the pattern matches the end of the variable\u0026rsquo;s value, delete the longest part that matches and return the rest\n${variable/pattern/string} The longest match to pattern in variable is replaced by string. Only the first match is replaced\n${variable//pattern/string} The longest match to pattern in variable is replaced by string. All matches are replaced\n${#varname} Return the length of the value of the variable as a character string\n*(patternlist) Match zero or more occurences of the given patterns\n+(patternlist) Match one or more occurences of the given patterns\n?(patternlist) Match zero or one occurence of the given patterns\n@(patternlist) Match exactly one of the given patterns\n!(patternlist) Match anything except one of the given patterns\n#-# Arrays\n#-#\n#-# Functions\n#-#\n#-#\n#-# Input/Output Redirection\n#-#\nCommand Description\ncmd1|cmd2 Pipe; takes standard output of cmd1 as standard input to cmd2\nfile Directs standard output to file\n\u0026lt; file Takes standard input from file\nfile Directs standard output to file; append to file if it already exists\n|file Forces standard output to file even if noclobber is set\nn\u0026gt;|file Forces output to file from file descriptor n even if noclobber is set\n\u0026lt;\u0026gt; file Uses file as both standard input and standard output\nn\u0026lt;\u0026gt;file Uses file as both input and output for file descriptor n\n\u0026laquo;label Here-document\nn\u0026gt;file Directs file descriptor n to file\nn\u0026gt;file Directs file description n to file; append to file if it already exists\nn\u0026gt;\u0026amp; Duplicates standard output to file descriptor n\nn\u0026lt;\u0026amp; Duplicates standard input from file descriptor n\nn\u0026gt;\u0026amp;m File descriptor n is made to be a copy of the output file descriptor\nn\u0026lt;\u0026amp;m File descriptor n is made to be a copy of the input file descriptor\n\u0026amp;\u0026gt;file Directs standard output and standard error to file\n\u0026lt;\u0026amp;- Closes the standard input\n\u0026amp;- Closes the standard output\nn\u0026gt;\u0026amp;- Closes the ouput from file descriptor n\nn\u0026lt;\u0026amp;- Closes the input from file descripor n\n#-#\n#-# Process management\n#-#\nProcess Management\nCommand Description\nps Show snapshot of processes\ntop Show real time processes\nkill Kill process with id pid\npkill Kill process with name name\nkillall Kill all processes with names beginning name\n#-#\n#-# Filesystem\n#-#\n#-# System directories\nDirectory Description\n/bin Binaries (executables). Basic system programs and utilities (such as bash).\n/usr/bin More system binaries.\n/usr/local/bin Miscellaneous binaries local to the particular machine.\n/sbin System binaries. Basic system administrative programs and utilities (such as fsck).\n/usr/sbin More system administrative programs and utilities.\n/etc Systemwide configuration scripts.\n/etc/rc.d Boot scripts, on Red Hat and derivative distributions of Linux.\n/usr/share/doc Documentation for installed packages.\n/usr/man The systemwide manpages.\n/dev Device directory. Entries (but not mount points) for physical and virtual devices. See Chapter 29.\n/proc Process directory. Contains information and statistics about running processes and kernel parameters. See Chapter 29.\n/sys Systemwide device directory. Contains information and statistics about device and device names. This is newly added to Linux with the 2.6.X kernels.\n/mnt Mount. Directory for mounting hard drive partitions, such as /mnt/dos, and physical devices. In newer Linux distros, the /media directory has taken over as the preferred mount point for I/O devices.\n/media In newer Linux distros, the preferred mount point for I/O devices, such as CD/DVD drives or USB flash drives.\n/var Variable (changeable) system files. This is a catchall \u0026ldquo;scratchpad\u0026rdquo; directory for data generated while a Linux/UNIX machine is running.\n/var/log Systemwide log files.\n/var/spool/mail User mail spool.\n/lib Systemwide library files.\n/usr/lib More systemwide library files.\n/tmp System temporary files.\n/boot System boot directory. The kernel, module links, system map, and boot manager reside here.\n#-# System files\nFile Description\n/etc/fstab (filesystem table)\n/etc/mtab (mounted filesystem table)\n/etc/inittab files.\n#-#\n#-# Package management\n#-#\n#-# Advanced Packaging Tool (apt)\nCommand Description\napt-get install Install specified package(s), along with any dependencies.\napt-get remove Removes specified package(s), but don\u0026rsquo;t remove dependencies.\napt-get autoremove Remove \u0026lsquo;orphaned\u0026rsquo; dependencies which are installed but are not used by any apps.\napt-get clean Remove downloaded package files (.deb) for software that is already installed.\napt-get purge [package-name] Remove and clean a specific package. (also removes configuration files)\napt-get update Read /etc/apt/sources.list and update the system’s database of available packages.\napt-get upgrade Upgrade all packages if there are updates available.\napt-cache search Find out the name of a package that you know is in the system.\napt-cache show Show details about a package, including description, dependency info and version numbers.\napt-cache depends \u0026lt;package name(s)\u0026gt; List the packages that the specified packages depends upon in a tree.\napt-cache rdepends \u0026lt;package name(s)\u0026gt; Generate and output the list of packages that depend upon the specified package.\napt-cache pkgnames Generate a list of the currently installed packages on your system.\n#-# Debian Package Manager (dpkg)\nCommand Description\ndpkg -i \u0026lt;package-file-name.deb\u0026gt; Install a .deb file.\ndpkg \u0026ndash;list [search-pattern] List packages currently installed on the system.\ndpkg \u0026ndash;configure Run a configuration interface to set up a package.\ndpkg-reconfigure Run a configuration interface on an already installed package.\n#-# Yellow Dog Updater, Modified (yum)\nCommand Description\nyum install \u0026lt;package-name(s)\u0026gt; Install the specified package(s) along with any required dependencies.\nyum erase \u0026lt;package-name(s)\u0026gt; Remove the specified package(s) from the system.\nyum search Search the list of package names and descriptions for packages that match the search pattern.\nyum deplist Listing all the libraries and modules that the named package depends on.\nyum check-update Refreshe the local cache of the yum database.\nyum info Display information about the specified package.\nyum reinstall \u0026lt;package-name(s)\u0026gt; Erase and re-install the specified package on your system.\nyum localinstall Check the dependencies of an .rpm file and then install it.\nyum update Download and install all updates including bug fixes, security releases, and upgrades.\nyum upgrade Upgrade all packages installed in your system to the latest release.\n#-# RPM package manager (rpm)\nCommand Description\nrpm \u0026ndash;install \u0026ndash;verbose \u0026ndash;hash \u0026lt;file.rpm\u0026gt; Install an rpm from the file. (rpm -ivh [filename].rpm)\nrpm \u0026ndash;erase Removes the given package. (rpm -e)\nrpm \u0026ndash;query \u0026ndash;all List the names of all packages currently installed. (rpm -qa)\nrpm \u0026ndash;query Confirm or deny if a given package is installed in your system. (rpm -q)\nrpm \u0026ndash;query \u0026ndash;info Display information about an installed package. (rpm -qi)\nrpm \u0026ndash;query \u0026ndash;list List files installed by a given package. (rpm -ql)\nrpm \u0026ndash;query \u0026ndash;file Check to see what installed package “owns” a given file.\n#-#\n#-# Job Scheduling\n#-#\n#-# Crontab command\nCommand Description\ncrontab -e Edit a crontab, or create it if it doesn’t exist.\ncrontab -u -e Edit a crontab as the specified user.\ncrontab -l Display crontab on standard output.\ncrontab -r Remove crontab.\ncrontab -v Display the last time the crontab was edited.\n#-# Syntax\n│ │ │ │ │\n│ │ │ │ └─ day of the week (0-6) (sunday = 0)\n│ │ │ └─ month (1-12)\n│ │ └─ day of month (1 - 31)\n│ └─ hour (0 - 23)\n└─ min (0-59)\n#-# Special characters\nCharacter Example Description\n* Specify any occurrence of the field.\r, 0,15 Specify 2 or more times of execution.\n0-59 Specify any time within a range.\r/ */15 Can be used with a range or wild card to run at a specified interval.\n#-# Examples\nCrontab Description\n\u0026lt;command\u0026gt; Every minute of every day.\r*/15 * * * * Every 15 minutes of every day.\n03-59/5 02 * * * Every 5 minutes of the 2 am hour starting at 2:03.\n0 * * * * Every day at midnight.\n0 */12 * * * Twice a day.\n02 * * * 1-5 Every weekday at 2 am.\n02 * * * 6,7 Weekends at 2 am.\n0 02 15 * * Once a month on the 15th at 2 am.\n0 02 */2 * * Every 2 days at 2 am.\n0 02 1 */2 * Every 2 months at 2 am on the 1st.\n","description":"","id":4,"section":"cheatsheets","tags":null,"title":"bash.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/bash.cheatsheet/"},{"content":"#-#\n#-# Big-O complexities for common algorithms\n#-#\n#-# Data Structure Operations\nData Structure Time Complexity Space Complexity Average Worst Worst\r------- ----- -----\rAccess Search Insertion Deletion Access Search Insertion Deletion\r------ ------ --------- -------- ------ ------ --------- --------\rArray O(1) O(n) O(n) O(n) O(1) O(n) O(n) O(n) O(n)\nStack O(n) O(n) O(1) O(1) O(n) O(n) O(1) O(1) O(n)\nSingly-Linked List O(n) O(n) O(1) O(1) O(n) O(n) O(1) O(1) O(n)\nDoubly-Linked List O(n) O(n) O(1) O(1) O(n) O(n) O(1) O(1) O(n)\nSkip List O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(n) O(n) O(n) O(n) O(n log(n))\nHash Table - O(1) O(1) O(1) - O(n) O(n) O(n) O(n)\nBinary Search Tree O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(n) O(n) O(n) O(n) O(n)\nCartesian Tree - O(log(n)) O(log(n)) O(log(n)) - O(n) O(n) O(n) O(n)\nB-Tree O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(n)\nRed-Black Tree O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(n)\nSplay Tree - O(log(n)) O(log(n)) O(log(n)) - O(log(n)) O(log(n)) O(log(n)) O(n)\nAVL Tree O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(n)\n#-# Array Sorting Algorithms\nAlgorithm Time Complexity Space Complexity Best Average Worst Worst\r---- ------- ----- -----\rQuicksort O(n log(n)) O(n log(n)) O(n^2) O(log(n))\nMergesort O(n log(n)) O(n log(n)) O(n log(n)) O(n)\nTimsort O(n) O(n log(n)) O(n log(n)) O(n)\nHeapsort O(n log(n)) O(n log(n)) O(n log(n)) O(1)\nBubble Sort O(n) O(n^2) O(n^2) O(1)\nInsertion Sort O(n) O(n^2) O(n^2) O(1)\nSelection Sort O(n^2) O(n^2) O(n^2) O(1)\nShell Sort O(n) O((nlog(n))^2) O((nlog(n))^2) O(1)\nBucket Sort O(n+k) O(n+k) O(n^2) O(n)\nRadix Sort O(nk) O(nk) O(nk) O(n+k)\n#-# Graph Operations\nNode / Edge Management Time complexity Storage Add Vertex Add Edge Remove Vertex Remove Edge Query\r------- ---------- -------- ------------- ----------- -----\rAdjacency list O(|V|+|E|) O(1) O(1) O(|V|+|E|) O(|E|) O(|V|)\nIncidence list O(|V|+|E|) O(1) O(1) O(|E|) O(|E|) O(|E|)\nAdjacency matrix O(|V|^2) O(|V|^2) O(1) O(|V|^2) O(1) O(1)\nIncidence matrix O(|V|⋅|E|) O(|V|⋅|E|) O(|V|⋅|E|) O(|V|⋅|E|) O(|V|⋅|E|) O(|E|)\n#-# Heap Operations\nType Time Complexity Heapify Find Max Extract Max Increase Key Insert Delete Merge\r------- -------- ----------- ------------ ------ ------ -----\rLinked List (sorted) - O(1) O(1) O(n) O(n) O(1) O(m+n)\nLinked List (unsorted) - O(n) O(n) O(1) O(1) O(1) O(1)\nBinary Heap O(n) O(1) O(log(n)) O(log(n)) O(log(n)) O(log(n)) O(m+n)\nBinomial Heap - O(1) O(log(n)) O(log(n)) O(1) O(log(n)) O(log(n))\nFibonacci Heap - O(1) O(log(n)) O(1) O(1) O(log(n)) O(1)\n","description":"","id":5,"section":"cheatsheets","tags":null,"title":"big-o-complexity.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/big-o-complexity.cheatsheet/"},{"content":"#-#\n#-# Filesystem\n#-#\nmklink /j source destination\n","description":"","id":6,"section":"cheatsheets","tags":null,"title":"cmd.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/cmd.cheatsheet/"},{"content":"#-#\n#-# Box Model\n#-#\n┌───────────────────────────────────────────┐\n│ │\n│ ┌───────────────────────────────────┐ │\n│ │ │ │\n│ │ ┌───────────────────────────┐ │ │\n│ │ │ padding ──┼───┼───┼── Clears an area around the content.\n│ │ │ ┌───────────────────┐ │ │ │ The padding is transparent.\n│ │ │ │ │ │ │ │\n│ │ │ │ content ────┼───┼───┼───┼── The content of the box,\n│ │ │ │ │ │ │ │ where text and images appear. │ │ │ └───────────────────┘ │ │ │\n│ │ │ │ │ │\n│ │ └───────────────────────────┘ │ │\n│ │ border ──┼───┼── A border that goes around\n│ └───────────────────────────────────┘ │ the padding and content.\n│ margin │\n└─────┼─────────────────────────────────────┘\n└─ Clears an area outside the border.\nThe margin is transparent.\n#-#\n#-# Selectors\n#-#\n#-# Selector types\nSelector Type Description\nUniversal Any element.\relement Type Any element of that type.\nelement, element Grouping Multiple elements of different types.\n.class Class Multiple elements of different sharing the same class.\n#id Id A single element identified by its id.\nelement element Descendant An element that is below another element, no matter how many levels below.\nelement \u0026gt; element Child An element that is directly below another element.\nelement + element Adjacent sibling All elements placed immediately after the specified parent elements.\nelement ~ element General sibling All elements that share the same parent and elements are in the same sequence (not necessarily immediate).\n[attribute] Attribute All elements with the specified attribute.\n#-# Attributes\nAttribute Description\n[attribute] All elements with the specified attribute.\n[attribute=value] All elements where the specified attribute is equal to \u0026lsquo;value\u0026rsquo;.\n[attribute~=value] All elements with an attribute containing the word \u0026lsquo;value\u0026rsquo;.\n[attribute|=value] All elements with an attribute list starting with \u0026lsquo;value\u0026rsquo;.\n[attribute^=value] All elements with an attribute beginning with \u0026lsquo;value\u0026rsquo;.\n[attribute$=value] All elements with an attribute ending with \u0026lsquo;value\u0026rsquo;.\n[attribute*=value] All elements with an attribute containing the substring \u0026lsquo;value\u0026rsquo;.\n#-# Pseudo-classes\nPseudo-class Description\n:active An activated element.\n:focus An element while the element has focus.\n:visited A visited link.\n:hover An element when you mouse over it.\n:link An unvisited link.\n:disabled An element while the element is disabled.\n:enabled An element while the element is enabled.\n:checked An element (form element control) that is checked.\n:selection An element that is currently selected of highlighted by the user.\n:lang Allows the author to specify a language to use in a specified element.\n:nth-child(n) An element that is the n-th sibling.\n:nth-last-child(n) An element that is the n-th sibling counting from the last sibling.\n:first-child An element that is the first sibling.\n:last-child An element that is the last sibling.\n:only-child An element that is the only child.\n:nth-of-type(n) An element that is the n-th sibling of its type. :nth-last-of-type(n) An element that is the n-th sibling of its type counting from the last sibling.\n:last-of-type An element that is the first sibling of its type.\n:first-of-type An element that is the last sibling of its type.\n:only-of-type An element that is the only child of that type.\n:empty An element that has no children.\n:root Root element within the document.\n:not(x) An element not represented by the argument \u0026lsquo;x\u0026rsquo;.\n:target A target element as specified by a target in a URI.\n#-# Pseudo-elements\nPseudo-element Description\n::first-letter Adds special style to the first letter of a text.\n::first-line Adds special style to the first line of a text.\n::before Inserts some content before an element. ::after Inserts some content after an element.\n","description":"","id":7,"section":"cheatsheets","tags":null,"title":"css.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/css.cheatsheet/"},{"content":"#-#\n#-# Keyboard shortcuts\n#-#\n#-# Debugging\nWindows OS X Shortcut\nF5 F5 Step Into\nF6 F6 Step Over\nF7 F7 Step Return\nF8 F8 Resume\nF11 F11 Debug Last Launched\nCtrl+F11 Cmd+F11 Run Last Launched\nCtrl+R Cmd+R Run to Line\nCtrl+Shift+B Cmd+Shift+B Toggle Breakpoint on Line\n#-# Navigation\nWindows OS X Shortcut\nF3 F3 Format Source\nCtrl+Shift+G Cmd+Shift+G Find Reference\nCtrl+Shift+R Cmd+Shift+R Open Resource\nCtrl+Shift+T Cmd+Shift+T Open Type\nCtrl+H Cmd+H Open Search Dialog\nCtrl+O Cmd+O Quick Outline\nCtrl+T Cmd+T Quick Hierarchy\nCtrl+L Cmd+L Go to Line\nAlt+Left Cmd+[ Back\nAlt+Right Cmd+] Forward\nCtrl+Q Cmd+Q Last Edit\nCtrl+. Cmd+. Next Error\nCtrl+, Cmd+, Previous Error\n#-# Coding\nWindows OS X Shortcut\nCtrl+1 Cmd+1 Quick Fix\nCtrl+Space Cmd+Space Content Assist\nF2 F2 Show Tooltip Description\nShift+F2 Shift+F2 Show External Javadoc\nCtrl+Shift+O Cmd+Shift+O Organize Imports\nCtrl+Shift+F Cmd+Shift+F Format Source\nCtrl+I Cmd+I Correct Indentation\nCtrl+/ Cmd+/ Toggle Comment\nCtrl+F Cmd+F Find and Replace\nCtrl+D Cmd+D Delete Line\nCtrl+Alt+Up Cmd+Option+Up Copy Lines Up\nAlt+Up Option+Up Move Lines Up\nCtrl+Alt+Down Cmd+Option+Down Copy Lines Down\nAlt+Down Option+Down Move Lines Down\n#-# Java Refactoring\nWindows OS X Shortcut\nAlt+Shift+R Cmd+Option+R Rename Element\nAlt+Shift+L Cmd+Option+L Extract to Local Variable\nAlt+Shift+M Cmd+Option+M Extract to Method\nCtrl+Shift+Y Cmd+Option+Y Change Method Signature\nCtrl+Shift+Z Cmd+Option+Z Undo Refactoring\n#-# Editor Window Shortcuts\nWindows OS X Shortcut\nCtrl+E Cmd+E Open Editor Window\nCtrl+M Cmd+M Maximize Editor Window\nCtrl+W Cmd+W Close Editor Window\nCtrl+Page Up Cmd+Page Up Switch to Tab Left\nCtrl+Page Down Cmd+Page Down Switch to Tab Right\nCtrl+F8 Cmd+F8 Change Perspective\nCtrl+Shift+S Cmd+Shift+S Save All\nCtrl+Shift+W Cmd+Shift+W Close All\nF5 F5 Refresh\n","description":"","id":8,"section":"cheatsheets","tags":null,"title":"eclipse.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/ide/eclipse.cheatsheet/"},{"content":"#-#\n#-# Directives\n#-#\n#-# Strings\nDirective Description\nboolean Converts string to boolean (true, false).\ncap_first Capita­lizes first word of string.\ncapitalize Capita­lizes every word in string properly.\nchop_l­ine­break Removes line-break from end of string.\ncontains (subst­ring) Checks if string contains substring.\ndate, time, datetime Converts string to date/t­ime­/da­tetime based on *_format.\nends_with (subst­ring) Checks if string ends with substring.\nensure­_en­ds_with (subst­ring) Returns string with substring appended if not already there.\nensure­_st­art­s_with (subst­ring) Same as ensure­_en­ds_­with, but prepended.\ngroups[x] Returns the returns the regex group from the matches method if it exists.\nhtml Returns the string with html characters parsed to ampersand codes.\nindex_of (subst­ring) Returns the index of the requested substring in string.\nj_string Escapes the string for Java String Literals.\njs_string Escapes the string for Javascript String Literals.\njson_s­tring Escapes the string for JSON String Literals.\nkeep_after (subst­ring, flags=­\u0026quot;­\u0026quot;) Returns all text after substring, not including substring.\nkeep_b­efore (subst­ring, flags=­\u0026quot;­\u0026quot;) Returns all text before substring, not including substring.\nlast_i­ndex_of (subst­ring) Returns the index of the last occurance of substring.\nleft_pad (x, sepera­tor­=\u0026quot; \u0026ldquo;) Returns the string with [seper­ator] prepended up to a maximum length.\nlength The number of characters in the string.\nlower_case Returns string in all lower case.\nmatches Regex Pattern checker.\nnumber The string as a number.\nreplace (subst­ring, replace) Returns all occurances of substring with replace.\nright_pad (x, sepera­tor­=\u0026rdquo; \u0026ldquo;) Same as left_pad, but appended instead.\nremove­_be­ginning (subst­ring) Returns string with substring removed from the beginning.\nremove­_ending Same as remove­_be­gin­ning, except fromt he ending.\nrtf Rich Text Format.\nsplit (subst­ring) Split a string at each substring.\nstarts­_with Same as ends_with, but for string beginning.\nstring Takes a multi-­value variable and returns just the string parts.\nsubstring Deprec­ated, use string­[x..y].\ntrim Removes leading and trailing whitespace.\nuncap_­first The opposite of cap_first.\nupper_case Opposite of lower_case.\nurl URL Character escaping.\nurl_path Same as url but doesn\u0026rsquo;t escape slashes.\nword_list Returns a sequence of all words in a string.\nxhtml Same as html, but for xhtml escaping.\nxml Same as hxtml, but different code for \u0026lsquo;.\n#-# Numbers\nDirective Description\nabs Absolute Value.\nc Num to String without formatting.\nis_inf­inite True if number is floating point infinite.\nis_nan True if number is NaN.\nround, floor, ceiling Rounds to closest, lowest, and highest, respec­tively.\nstring.format Num to String with optional formatting (number|currency|percent|computer).\n#-# Date / Time\nDirective Description\ndate Returns date only from a datetime value.\ntime Returns time only from a datetime value.\ndatetime Returns date and time from a datetime value.\n(date/­tim­e/d­ate­tim­e)­if_­unknown Marks a date-like value with specified missing subtype.\niso\u0026hellip; Converts date-like value to specified iso format.\nstring.format Converts date-like object to string. See freemarker manual for formats.\n#-# Booleans\nDirective Description\nc Boolean to String for computer languages.\nstring­(\u0026ldquo;st­r1\u0026rdquo;, \u0026ldquo;­str­­2\u0026rdquo;) Boolean to String with human-­rea­dable flags (\u0026ldquo;­str­­1\u0026rdquo; = true and \u0026ldquo;­str­­2\u0026rdquo; = false).\n#-# Sequences\nDirective Description\nchunk(x, filler­=null Splits sequence into multiple sequences of size x. Last chunk.\nfirst Returns the first element of the sequence.\njoin(s­epe­rator) Concat­onates sequence elements with seperator in between.\nlast Returns the last element in the sequence.\nreverse Returns the sequence in reverse order.\nseq_co­nta­ins­(ne­edle) Returns true if the squence contains needle.\nseq_in­dex­_of­(ne­edle) Same as contains, but returns the index of the first element.\nseq_la­st_­ind­ex_­of(­needle)\nsize\nsort\nsort_by\n#-# Nodes (XML)\nDirective Description\nancest­ors­(name) Returns a sequence of nodes ancestors.\nchildren Returns a sequence of all child nodes.\nnode_name Returns the node name (directive invoked when node is \u0026ldquo;­vis­ite­d\u0026rdquo;).\nnode_n­ame­space Returns namespace string of node.\nnode_type Returns a string with the node type.\nparent Returns the immediate parent node.\nroot Returns the root node.\n#-# Hashes\nDirective Description\nKeys A sequence with all the hash keys.\nValues A sequence with all the hash values.\n#-# Misc\nDirective Description\nbyte,double,float,int,long,short Converts numbers to other types of numbers.\neval Evaluate a string as an FTL expression.\nhas_co­ntent Returns true if variable exists and isn\u0026rsquo;t empty, false otherwise.\ninterpret Returns the value of a string interp­reted as FTL code. Sort of like a function.\nis_\u0026hellip;[­type] Checks if variable is of type [type]. See docs for full list.\nnamespace Returns macro or function namespace, if any.\nnew Creates a variable of type class. Usage is var = \u0026ldquo;­FQD­N\u0026rdquo;?n­ew(­opt­ions).\nnumber­_to­_[d­ate­/ti­me/­dat­etime] Converts a number to date/t­ime­/da­tetime, using the number of seconds since epoch.\n#-#\n#-# Directives reference\n#-#\nDirective Description\nassign name=value [in nshash] Creates a variable called name.\nattemp­t/r­ecover try/catch.\ncompress Removes all but one newline character between lines.\nescape x as x?[escape type] \u0026lt;pr­e\u0026gt; tag for freemarker code.\nflush Forces generated output to be written. 99% of the time is not neccessary.\nftl Tells programs that file is an ftl file.\nfuncti­on/­return Similar to a macro, except returns a specific value as denoted by return.\nglobal Makes a global variable. Variable will be exposed as if at data-model level.\nif/els­eif­/else Creates an if/els­eif­/else block.\nimport path as hash Imports the library at location path for use in the current ftl file.\ninclude path Includes the file at location path for use in current document.\nlist sequence as item foreach loop.\nlocal Like assign, but creates local variables within macros or functions.\nmacro/­nes­ted­/return Macro outputs a block of code which wraps nested, return works as a break.\nnoparse \u0026lt;pr­e\u0026gt; tag for ftl.\nnt No trim. Disables whitespace stripping.\nsetting name=value Modifies parse settings. View full list in the docs page.\nstop [reason] Per ftl docs: an emergency brake. Returns reason if set.\nswitch­/ca­se/­def­aul­t/break A regular switch block.\nt, lt, rt Trim, left trim, right trim. Ignores whitespace based on tag position used.\nvisit/­rec­urs­e/f­allback Used for parsing trees, usually XML. See the ftl docs for full info.\n#-#\n#-# Examples\n#-#\n#-# Include\n\u0026lt;#include \u0026ldquo;/copyright_footer.html\u0026rdquo;\u0026gt;\n#-# Assignment\nAny object except null can be passed to a variable. \u0026lt;#assign countries = model.countries\u0026gt;\n\u0026lt;#assign myString = \u0026ldquo;String data\u0026rdquo;\u0026gt;\n#-# If / elseif / else\nCommon operators are supported \u0026amp;\u0026amp;, ||, !, ==, !=, \u0026gt;, \u0026lt;, \u0026gt;=, \u0026lt;=\nSimple if condition \u0026lt;#if user == \u0026ldquo;jdoe\u0026rdquo;\u0026gt;\nHi John Doe!\n\u0026lt;/#if\u0026gt;\nNested if condition \u0026lt;#if x == 1\u0026gt;\n\u0026hellip;\n\u0026lt;#elseif myVar?has_content\u0026gt;\n\u0026hellip;\n\u0026lt;#else\u0026gt;\n\u0026hellip;\n\u0026lt;/#if\u0026gt;\n#-# Iterate array\n\u0026lt;#list [\u0026ldquo;red\u0026rdquo;, \u0026ldquo;green\u0026rdquo;, \u0026ldquo;blue\u0026rdquo;] as color\u0026gt;\n${color}\n\u0026lt;/#list\u0026gt;\n\u0026lt;#list countries as country\u0026gt;\n${country_index + 1}. ${country}\n\u0026lt;/#list\u0026gt;\n#-# Iterate over hashmap keys\n\u0026lt;#list capitalList?keys as key\u0026gt;\n${key} = ${capitalList[key]}\n\u0026lt;/#list\u0026gt;\n\u0026lt;#assign h = {\u0026ldquo;name\u0026rdquo;:\u0026ldquo;mouse\u0026rdquo;, \u0026ldquo;price\u0026rdquo;:50}\u0026gt;\n\u0026lt;#assign keys = h?keys\u0026gt;\n\u0026lt;#list keys as key\u0026gt;\n${key} = ${h[key]};\n\u0026lt;/#list\u0026gt;\n#-# Dealing with missing variables\nA non-existent variable and a variable with null value is the same \u0026lt;#if model.object.user??\u0026gt;Welcome ${user}\u0026lt;/#if\u0026gt;\n\u0026lt;#if model.object.user?has_content\u0026gt;Welcome ${user}\u0026lt;/#if\u0026gt;\nIf the value is null/empty, replace with a default value ${user!\u0026ldquo;Anonymous\u0026rdquo;}\n${animals.python.price!0}\n#-# Methods and functions\nThe average of 3 and 5 ${avg(3, 5)}\nThe average of the price of a python and an elephant ${avg(animals.python.price, animals.elephant.price)}\nArithmetical calculations (x * 1.5 + 10) / 2 - y % 100\nComparison x == y, x != y, x \u0026lt; y, x \u0026gt; y, x \u0026gt;= y, x \u0026lt;= y\nLogical operations !registered \u0026amp;\u0026amp; (firstVisit || fromEurope)\n#-# Call Java Method\n${model.name}\n${model.getName()}\n#-#\n#-# References\n#-#\n[1] http://freemarker.org/docs/ref.html\n","description":"","id":9,"section":"cheatsheets","tags":null,"title":"freemarker.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/freemarker.cheatsheet/"},{"content":"#-#\n#-# Configuration\n#-#\nDefine the author name to be used for all commits by the current user. git config \u0026ndash;global user.name Define the author email to be used for all commits by the current user. git config \u0026ndash;global user.email Create shortcut for a Git command. E.g. alias.glog \u0026ldquo;log \u0026ndash;graph \u0026ndash;oneline\u0026rdquo; will set \u0026ldquo;git glog\u0026rdquo; equivalent to \u0026ldquo;git log \u0026ndash;graph \u0026ndash;oneline\u0026rdquo; git config \u0026ndash;global alias. Set text editor used by commands for all users on the machine. The arg should be the command that launches the desired editor (ex. vim). git config \u0026ndash;system core.editor Open the global configuration file in a text editor for manual editing. git config \u0026ndash;global \u0026ndash;edit\nEnable helpful colorization of command line output git config \u0026ndash;global color.ui auto\nList all configured properties git config \u0026ndash;list\n#-#\n#-# Command line\n#-#\n#-# Get and create repositories\nCommand Description\ngit clone Clone repo located at onto the local machine.\ngit init Create empty Git repo in specified directory.\n#-# Basic snapshotting\nCommand Description\ngit status Show changed files in your working directory.\ngit diff Show changes to tracked files.\ngit diff \u0026ndash;cached Show staged changes.\ngit add . Stage all changes to the next commit.\ngit add Stage changes in a file to the next commit.\ngit commit -am \u0026lsquo;\u0026rsquo; Record all local changes in tracked files in version history.\ngit commit -m \u0026lsquo;\u0026rsquo; Record staged changes permanently in version history.\ngit commit \u0026ndash;amend Combine the staged changes with the last commit.\n#-# Reset \u0026amp; Revert\nCommand Description\ngit checkout HEAD Discard local changes in .\ngit revert Revert a commit.\ngit reset \u0026ndash;hard HEAD Discard all local changes in your working directory.\ngit reset \u0026ndash;hard Reset HEAD to and discard all changes since.\ngit reset Reset HEAD to and preserve all changes as unstaged changes.\ngit reset \u0026ndash;keep Reset HEAD to and preserve uncommitted local changes.\ngit rm Remove file from staging area and working directory.\ngit rm \u0026ndash;cached Remove file from staging area.\ngit mv Move or rename a file. The changes will be staged.\n#-# Remote\nCommand Description\ngit remote update Refresh list of remotes.\ngit remote -v List all currently configured remotes.\ngit remote show Display information about remote.\ngit remote add Add a new remote, named .\ngit fetch Download all changes from remote, don\u0026rsquo;t integrate into HEAD.\ngit pull Download changes and merge to HEAD.\ngit push Publish local changes.\ngit push : Delete a branch on the remote.\ngit push \u0026ndash;tags Publish tags.\n#-# Braches \u0026amp; Tags\nCommand Description\ngit branch List local branches.\ngit branch -a List both local and remote branches.\ngit branch -r List remote branches.\ngit checkout Switch to the specified branch and update working directory.\ngit branch Create new branch based on current HEAD.\ngit branch -d Delete local branch.\ngit tag Mark the current commit with a tag.\n#-# Merge \u0026amp; Rebase\nCommand Description\ngit merge Merge into your current HEAD.\ngit rebase Rebase your HEAD onto .\ngit rebase \u0026ndash;abort Abort a rebase.\ngit rebase \u0026ndash;continue Continue a rebase after resolving conflicts.\ngit mergetool Use configured merge tool to resolve conflicts.\n#-# Stash\nCommand Description\ngit stash Temporarily store all modified tracked files.\ngit stash save [msg] Same as above but naming the stash entry.\ngit stash pop Restore most recently stashed files.\ngit stash list List all stashed changes.\ngit stash drop Discard most recently stashed changeset.\n#-# Review history\nCommand Description\ngit log Show all commits, starting with most recent.\ngit log Show changes over time for a file.\ngit log \u0026ndash;follow List version history for a file, including renames.\ngit blame Show changes for a file with time and author.\n","description":"","id":10,"section":"cheatsheets","tags":null,"title":"git.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/tools/version-control/git.cheatsheet/"},{"content":"#-#\n#-# Command line\n#-#\ngradle [option\u0026hellip;] [task\u0026hellip;]\n#-# Options\nOption Description\n-?, -h, \u0026ndash;help Shows a help message.\n-a, \u0026ndash;no-rebuild Do not rebuild project dependencies.\n\u0026ndash;all Shows additional detail in the task listing.\n-b, \u0026ndash;build-file Specifies the build file.\n-c, \u0026ndash;settings-file Specifies the settings file.\n\u0026ndash;console Specifies which type of console output to generate (plain/auto/rich).\n\u0026ndash;continue Continues task execution after a task failure.\n\u0026ndash;configure-on-demand Only relevant projects are configured in this build run.\n-D, \u0026ndash;system-prop Sets a system property of the JVM, for example -Dmyprop=myvalue.\n-d, \u0026ndash;debug Log in debug mode (includes normal stacktrace).\n-g, \u0026ndash;gradle-user-home Specifies the Gradle user home directory (defaults to ~/.gradle).\n\u0026ndash;gui Launches the Gradle GUI.\n-I, \u0026ndash;init-script Specifies an initialization script.\n-i, \u0026ndash;info Set log level to info.\n-m, \u0026ndash;dry-run Runs the build with all task actions disabled.\n\u0026ndash;offline Specifies that the build should operate without accessing network resources.\n-P, \u0026ndash;project-prop Sets a project property of the root project, for example -Pmyprop=myvalue.\n-p, \u0026ndash;project-dir Specifies the start directory for Gradle (defaults to current directory).\n\u0026ndash;parallel Build projects in parallel.\n\u0026ndash;max-workers Sets the maximum number of workers that Gradle may use.\n\u0026ndash;profile Profiles build execution time and generates a report in the buildDir/reports/profile directory.\n\u0026ndash;project-cache-dir Specifies the project-specific cache directory (defaults to .gradle in the root project dir).\n-q, \u0026ndash;quiet Log errors only.\n\u0026ndash;recompile-scripts Forces scripts to be recompiled, bypassing caching.\n\u0026ndash;refresh-dependencies Refresh the state of dependencies.\n\u0026ndash;rerun-tasks Specifies that any task optimization is ignored.\n-S, \u0026ndash;full-stacktrace Print out the full (very verbose) stacktrace for any exceptions.\n-s, \u0026ndash;stacktrace Print out the stacktrace also for user exceptions (e.g. compile error).\n-t, \u0026ndash;continuous Enables continuous building - Gradle will automatically re-run when changes are detected.\n-u, \u0026ndash;no-search-upwards Don\u0026rsquo;t search in parent directories for a settings.gradle file.\n-v, \u0026ndash;version Prints version info.\n-x, \u0026ndash;exclude-task Specifies a task to be excluded from execution.\n#-# Tasks\nTask Description\nprojects List the sub-projects of the selected project, displayed in a hierarchy.\ntasks List the main tasks of the selected project.\n#-# Environment variables\nVariable Description\nGRADLE_OPTS Specifies command-line arguments to use to start the JVM.\nGRADLE_USER_HOME Specifies the Gradle user home directory (defaults to ~/.gradle).\nJAVA_HOME Specifies the JDK installation directory to use.\n#-#\n#-# Plugins\n#-#\n#-# Usage\napply plugin: \u0026lsquo;\u0026rsquo;\n#-# Base plugins\nPlugin Description\nbase Adds the standard lifecycle tasks and configures reasonable defaults for the archive tasks.\njava-base Adds the source sets concept to the project. Does not add any particular source sets.\ngroovy-base Adds the Groovy source sets concept to the project.\nscala-base Adds the Scala source sets concept to the project.\nreporting-base Adds some shared convention properties to the project, relating to report generation.\n#-# Language plugins\nPlugin Auto applies Description\njava java-base Adds Java compilation, testing and bundling capabilities to a project.\ngroovy java, groovy-base Adds support for building Groovy projects.\nscala java, scala-base Adds support for building Scala projects.\nantlr java Adds support for generating parsers using Antlr.\nassembler - Adds native assembly language capabilities to a project.\nc - Adds C source compilation capabilities to a project.\ncpp - Adds C++ source compilation capabilities to a project.\nobjective-c - Adds Objective-C source compilation capabilities to a project.\nobjective-cpp - Adds Objective-C++ source compilation capabilities to a project.\nwindows-resources - Adds support for including Windows resources in native binaries.\n#-# Integration plugins\nPlugin Auto applies Description\napplication java, distribution Adds tasks for running and bundling a Java project as a command-line application.\near - Adds support for building J2EE applications.\njetty war Deploys your web application to a Jetty web container embedded in the build.\nmaven - Adds support for publishing artifacts to Maven repositories.\nosgi java-base Adds support for building OSGi bundles.\nwar java Adds support for assembling web application WAR files.\n#-# Java Plugin\nTask name Description\ncompileJava Compiles production Java source files using javac.\nprocessResources Copies production resources into the production classes directory.\nclasses Assembles the production classes directory.\ncompileTestJava Compiles test Java source files using javac.\nprocessTestResources Copies test resources into the test classes directory.\ntestClasses Assembles the test classes directory.\njar Assembles the JAR file\njavadoc Generates API documentation for the production Java source, using Javadoc\ntest Runs the unit tests using JUnit or TestNG.\nuploadArchives Uploads artifacts in the archives configuration, including the JAR file.\nclean Deletes the project build directory.\ncleanTaskName Deletes files created by specified task.\nassemble Assembles all the archives in the project.\ncheck Performs all verification tasks in the project.\nbuild Performs a full build of the project.\nbuildNeeded Performs a full build of the project and all projects it depends on.\nbuildDependents Performs a full build of the project and all projects which depend on it.\nbuildConfigName Assembles the artifacts in the specified configuration.\nuploadConfigName Assembles and uploads the artifacts in the specified configuration.\nDirectory structure convention src/main/java // Production Java source\nsrc/main/resources // Production resources\nsrc/test/java // Test Java source\nsrc/test/resources // Test resources\nsrc/sourceSet/java // Java source for the given source set\nsrc/sourceSet/resources // Resources for the given source set\nCustomize directory structure sourceSets {\nmain {\njava {\nsrcDir \u0026lsquo;src/java\u0026rsquo;\n}\nresources {\nsrcDir \u0026lsquo;src/resources\u0026rsquo;\n}\n}\n}\n#-#\n#-# Repositories\n#-#\nrepositories {\n// Maven central repository\nmavenCentral()\n// Remote Maven repository\nmaven {\nurl \u0026ldquo;http://repo.mycompany.com/maven2\u0026quot;\n}\n// Remote Maven repository with authentication\nmaven {\ncredentials {\nusername \u0026ldquo;user\u0026rdquo;\npassword \u0026ldquo;password\u0026rdquo;\n}\nurl \u0026ldquo;http://repo.mycompany.com/maven2\u0026quot;\n}\n// Ivy repository\nivy {\nurl \u0026ldquo;http://repo.mycompany.com/repo\u0026quot;\n}\n// Local repository\nflatDir {\ndirs \u0026ldquo;libs\u0026rdquo;\n}\n}\n#-#\n#-# Dependencies\n#-#\n#-# Dependency scopes\nScope Description\ncompile Dependencies required to compile the production source of the project.\nruntime Dependencies required by production classes at runtime. Also includes the compile time dependencies.\ntestCompile Dependencies required to compile the test source of the project. Also includes the compiled production classes and the compile time dependencies.\ntestRuntime Dependencies required to run the tests. Also includes the compile, runtime and test compile dependencies.\n#-# Module dependencies\nDeclaring dependencies with group-name-version strings dependencies {\ncompile \u0026lsquo;org.apache.solr:solr-core:1.4.1\u0026rsquo;\ncompile \u0026lsquo;org.springframework:spring-core:3.0.5\u0026rsquo;\ntestCompile \u0026lsquo;junit:junit:4.8\u0026rsquo;\n}\nDeclaring dependencies with Groovy map syntax dependencies {\ncompile group: \u0026lsquo;org.apache.solr\u0026rsquo;, name: \u0026lsquo;solr-core\u0026rsquo; version: \u0026lsquo;1.4.1\u0026rsquo;\ncompile group: \u0026lsquo;org.springframework\u0026rsquo;, name: \u0026lsquo;spring-core\u0026rsquo;, version: \u0026lsquo;3.0.5\u0026rsquo;\ntestCompile group: \u0026lsquo;junit\u0026rsquo;, name: \u0026lsquo;junit\u0026rsquo;, version: \u0026lsquo;4.8\u0026rsquo;\n}\n#-# Dynamic versions\ndependencies {\ncompile \u0026lsquo;org.springframework:spring-core:3.0.+\u0026rsquo;\ntestCompile \u0026lsquo;junit:junit:4.8+\u0026rsquo;\n}\n#-# File dependencies\nDeclaring a dependency explicitly on a locally managed module dependencies {\ncompile files(\u0026rsquo;lib/hacked-vendor-module.jar\u0026rsquo;)\n}\nDepending recursively on all of the files under lib dependencies {\ncompile fileTree(\u0026rsquo;lib\u0026rsquo;)\n}\n#-# Project dependencies\nDeclaring dependencies on subprojects dependencies {\ncompile project(\u0026rsquo;:projectA\u0026rsquo;)\ncompile project(\u0026rsquo;:projectB\u0026rsquo;)\n}\nDeclaring an explicit configuration dependencies on a subproject dependencies {\ncompile project(path: \u0026lsquo;:projectA\u0026rsquo;, configuration: \u0026lsquo;published\u0026rsquo;)\ncompile project(\u0026rsquo;:projectB\u0026rsquo;)\n}\n#-# Internal dependencies\nDepending on the Gradle API dependencies {\ncompile gradleApi()\n// other dependencies\u0026hellip;\n}\nThe configuration of a typical Groovy build apply plugin: \u0026lsquo;groovy\u0026rsquo;\n// Repository declaration\ndependencies {\ngroovy \u0026lsquo;org.codehaus.groovy:groovy:2.0.5\u0026rsquo;\n// other dependencies\u0026hellip;\n}\nDepending on Gradle’s internal version of Groovy apply plugin: \u0026lsquo;groovy\u0026rsquo;\ndependencies {\ngroovy localGroovy()\n// other dependencies\u0026hellip;\n}\n#-# Example\ndependencies {\ncompile \u0026lsquo;org.apache.solr:solr-core:1.4.1\u0026rsquo;\ncompile group: \u0026lsquo;org.hibernate\u0026rsquo;, name: \u0026lsquo;hibernate-core\u0026rsquo;, version: \u0026lsquo;3.6.7.Final\u0026rsquo;\ntestCompile group: \u0026lsquo;junit\u0026rsquo;, name: \u0026lsquo;junit\u0026rsquo;, version: \u0026lsquo;4.+\u0026rsquo;\ncompile project(\u0026rsquo;:projectA\u0026rsquo;)\nruntime files(\u0026rsquo;libs/a.jar\u0026rsquo;, \u0026rsquo;libs/b.jar\u0026rsquo;)\nruntime fileTree(dir: \u0026rsquo;libs\u0026rsquo;, include: \u0026lsquo;*.jar\u0026rsquo;)\n}\n#-#\n#-# Tasks\n#-#\n#-# Defining tasks\nEvery task is composed of two stages: configuration and execution.\nBy looking at the following three tasks we can see that there are a few slight differences when\nit comes to what is executed when.\n// This task will output the defined message when calling it explicitly: \u0026lsquo;gradle taskOne\u0026rsquo;\n// but it will also display the message when we call \u0026lsquo;gradle tasks\u0026rsquo; due to the fact that\n// the printing is defined in the configuration stage and Gradle has to configure all the\n// specified tasks in the build script before the actual build is started.\ntask taskOne {\ndef message = \u0026ldquo;Hello world!\u0026rdquo; // configuration stage\nprintln message // configuration stage\n}\n// In order to have a task execute something when called we need to specify a task Action.\n// The easiest way to specify a task action is via the Task#doLast() method.\ntask taskTwo {\ndef message = \u0026ldquo;Hello world!\u0026rdquo; // configuration stage\ndoLast {\nprintln message // execution stage (when the task is called)\n}\n}\n// The \u0026lsquo;\u0026laquo;\u0026rsquo; is just a shortcut to doLast.\n// This implementation has the drawback of not having a configuration stage so this is good for\n// really small tasks, but for tasks other than \u0026lsquo;Hello world!\u0026rsquo; you might consider using doLast.\ntask taskThree \u0026laquo; {\ndef message = \u0026ldquo;Hello world!\u0026rdquo; // execution stage (when the task is called)\nprintln message // execution stage (when the task is called)\n}\n#-# Adding behaviour to existing tasks\ntask hello \u0026laquo; { println \u0026lsquo;Hello Earth\u0026rsquo; }\nhello.doFirst { println \u0026lsquo;Hello Venus\u0026rsquo; }\nhello.doLast { println \u0026lsquo;Hello Mars\u0026rsquo; }\nhello \u0026laquo; { println \u0026lsquo;Hello Jupiter\u0026rsquo; } // \u0026laquo; is an alias for doLast\n#-# Extra task properties\ntask myTask { ext.myProperty = \u0026lsquo;myValue\u0026rsquo; }\ntask printTaskProperty \u0026laquo; { println myTask.myProperty}\n#-# Locating tasks\nAccessign tasks as properties task hello\nprintln hello.name\nprintln project.hello.name\nAccessing tasks via the tasks collection task hello\nprintln tasks.hello.name\nprintln tasks[\u0026lsquo;hello\u0026rsquo;].name\nAccessing tasks by path println tasks.getByPath(\u0026lsquo;hello\u0026rsquo;).path\nprintln tasks.getByPath(\u0026rsquo;:hello\u0026rsquo;).path\nprintln tasks.getByPath(\u0026lsquo;projectA:hello\u0026rsquo;).path\nprintln tasks.getByPath(\u0026rsquo;:projectA:hello\u0026rsquo;).path\n#-# Configuring tasks\ntask copy(type: Copy) {\ndescription \u0026lsquo;Copies resources to the target directory.\u0026rsquo;\nfrom \u0026lsquo;resources\u0026rsquo;\ninto \u0026rsquo;target\u0026rsquo;\ninclude(\u0026rsquo;/*.txt\u0026rsquo;, \u0026lsquo;/.xml\u0026rsquo;, \u0026lsquo;**/.properties\u0026rsquo;)\n}\n#-# Task dependencies\nAdding dependency on a task from another project project(\u0026lsquo;projectA\u0026rsquo;) {\ntask taskX(dependsOn: \u0026lsquo;:projectB:taskY\u0026rsquo;) \u0026laquo; {\nprintln \u0026rsquo;taskX\u0026rsquo;\n}\n}\nproject(\u0026lsquo;projectB\u0026rsquo;) {\ntask taskY(dependsOn: \u0026lsquo;:projectA:taskX\u0026rsquo;) \u0026laquo; {\nprintln \u0026rsquo;taskY\u0026rsquo;\n}\n}\nAdding dependency using task object task taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntask taskY \u0026laquo; { println \u0026rsquo;taskY\u0026rsquo; }\ntaskX.dependsOn taskY\nAdding dependency using closure task taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntaskX.dependsOn {\ntasks.findAll { task -\u0026gt; task.name.startsWith(\u0026rsquo;lib\u0026rsquo;) }\n}\ntask lib1 \u0026laquo; { println \u0026rsquo;lib1\u0026rsquo; }\ntask lib2 \u0026laquo; { println \u0026rsquo;lib2\u0026rsquo; }\ntask lib3 \u0026laquo; { println \u0026rsquo;lib3\u0026rsquo; }\n#-# Ordering tasks\nThe primary difference between a task ordering and a task dependency is that an ordering\ndoes not influence which tasks will be executed, only the order in which they will be executed.\nMust run after task taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntask taskY \u0026laquo; { println \u0026rsquo;taskY\u0026rsquo; }\ntaskY.mustRunAfter taskX\nShould run after task taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntask taskY \u0026laquo; { println \u0026rsquo;taskY\u0026rsquo; }\ntaskY.shouldRunAfter taskX\n#-# Replacing tasks\ntask taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntask taskX(overwrite: true) \u0026laquo; { println \u0026lsquo;I am the new one.\u0026rsquo; }\n#-# Skipping tasks\nUsing a predicate task hello \u0026laquo; { println \u0026lsquo;Hello world!\u0026rsquo; }\nhello.onlyIf { !project.hasProperty(\u0026lsquo;skipHello\u0026rsquo;) }\nUsing StopExecutionException task hello \u0026laquo; { println \u0026lsquo;Hello world!\u0026rsquo; }\nhello.doFirst {\nif (true) { throw new StopExecutionException() }\n}\n#-# Disabling tasks\ntask disableMe \u0026laquo; { println \u0026lsquo;This should not be printed if the task is disabled\u0026rsquo; }\ndisableMe.enabled = false\n#-# Task rules\ntasks.addRule(\u0026lsquo;Pattern: ping \u0026rsquo;) { String taskname -\u0026gt;\nif (taskname.startsWith(\u0026lsquo;ping\u0026rsquo;)) {\ntask(taskname) \u0026laquo; {\nprintln \u0026lsquo;Pinging: \u0026rsquo; + (taskName - \u0026lsquo;ping\u0026rsquo;)\n}\n}\n}\n#-# Finalizer tasks\nAdding a task finalizer task taskX \u0026laquo; { println \u0026rsquo;taskX\u0026rsquo; }\ntask taskY \u0026laquo; { println \u0026rsquo;taskY\u0026rsquo; }\ntaskX.finalizedBy taskY\nTask finalizer for a failing task task taskX \u0026laquo; {\nprintln \u0026rsquo;taskX\u0026rsquo;\nthrow new RuntimeException()\n}\ntask taskY \u0026laquo; {\nprintln \u0026rsquo;taskY\u0026rsquo;\n}\ntaskX.finalizedBy taskY\n#-# Define default tasks\ndefaultTasks \u0026lsquo;clean\u0026rsquo;, \u0026lsquo;run\u0026rsquo;\n#-#\n#-# Multi-project builds\n#-#\n#-# Configuration (settings.gradle)\nDefine the list of subprojects include \u0026lsquo;projectA\u0026rsquo;, \u0026lsquo;projectB\u0026rsquo;\n#-# Tasks (build.gradle)\nDefine tasks to run on all projects allprojects {\ntask projectName \u0026laquo; { task -\u0026gt; println \u0026ldquo;I\u0026rsquo;m $task.project.name\u0026rdquo; }\n}\nDefine tasks to run on all subprojects subprojects {\ntask projectName \u0026laquo; { println \u0026ldquo;I am a subproject\u0026rdquo; }\n}\nDefine tasks to run on a specific project project(\u0026rsquo;:projectA\u0026rsquo;).projectName \u0026laquo; {\nprintln \u0026ldquo;I have a specific project name task\u0026rdquo;\n}\n#-#\n#-# Gotchas\n#-#\n#-# Publishing the fat jar for a Spring Boot application, not classes only jar\nSpring Boot\u0026rsquo;s bootRepackage task is setup as a dependency of the assemble task.\nIn order to end up with the fat jar on nexus or whatever, the publish task has to depend on assemble.\npublish {\ndependsOn assemble\n}\n","description":"","id":11,"section":"cheatsheets","tags":null,"title":"gradle.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/tools/build-automation/gradle.cheatsheet/"},{"content":"#-#\n#-# Variables\n#-#\ndef x = 1\nprintln x\nx = new java.util.Date()\nprintln x\nx = -3.1499392\nprintln x\nx = false\nprintln x\nx = \u0026ldquo;Groovy!\u0026rdquo;\nprintln x\n#-#\n#-# Collections\n#-#\nCreating an empty list def technologies = []\nAdding elements to the list technologies.add(\u0026ldquo;Grails\u0026rdquo;)\ntechnologies \u0026laquo; \u0026ldquo;Groovy\u0026rdquo; // Left shift adds, and returns the list\ntechnologies.addAll([\u0026ldquo;Gradle\u0026rdquo;,\u0026ldquo;Griffon\u0026rdquo;])\nRemoving elements from the list technologies.remove(\u0026ldquo;Griffon\u0026rdquo;)\ntechnologies = technologies - \u0026lsquo;Grails\u0026rsquo;\nIterate over elements of a list technologies.each { println \u0026ldquo;Technology: $it\u0026rdquo;}\ntechnologies.eachWithIndex { it, i -\u0026gt; println \u0026ldquo;$i: $it\u0026rdquo;}\nChecking list contents contained = technologies.contains( \u0026lsquo;Groovy\u0026rsquo; )\ncontained = \u0026lsquo;Groovy\u0026rsquo; in technologies\ntechnologies.containsAll([\u0026lsquo;Groovy\u0026rsquo;,\u0026lsquo;Grails\u0026rsquo;])\nSorting lists technologies.sort() // also mutates original list\nsortedTechnologies = technologies.sort(false) // without mutating the original\nManipulating lists Collections.replaceAll(technologies, \u0026lsquo;Gradle\u0026rsquo;, \u0026lsquo;gradle\u0026rsquo;)\nCollections.shuffle(technologies, new Random())\ntechnologies.clear()\n#-#\n#-# Maps\n#-#\nCreating an empty map def devMap = [:]\nAdd values devMap = [\u0026rsquo;name\u0026rsquo;:\u0026lsquo;Roberto\u0026rsquo;, \u0026lsquo;framework\u0026rsquo;:\u0026lsquo;Grails\u0026rsquo;, \u0026rsquo;language\u0026rsquo;:\u0026lsquo;Groovy\u0026rsquo;]\ndevMap.put(\u0026rsquo;lastName\u0026rsquo;,\u0026lsquo;Perez\u0026rsquo;)\nIterate over elements of a map devMap.each { println \u0026ldquo;$it.key: $it.value\u0026rdquo; }\ndevMap.eachWithIndex { it, i -\u0026gt; println \u0026ldquo;$i: $it\u0026rdquo;}\nEvaluate if a map contains a key assert devMap.containsKey(\u0026rsquo;name\u0026rsquo;)\nEvaluate if a map contains a value assert devMap.containsValue(\u0026lsquo;Roberto\u0026rsquo;)\nGet the keys of a map println devMap.keySet()\nGet the values of a map println devMap.values()\n#-#\n#-# Logical Branching and Looping\n#-#\nGroovy supports the usual if - else syntax def x = 3\nif (x \u0026lt; 1) {\nprintln \u0026ldquo;X lower than One\u0026rdquo;\n} else if (x == 1) {\nprintln \u0026ldquo;One\u0026rdquo;\n} else if (x == 2) {\nprintln \u0026ldquo;Two\u0026rdquo;\n} else {\nprintln \u0026ldquo;X greater than Two\u0026rdquo;\n}\nGroovy also supports the ternary operator def y = 10\ndef x = (y \u0026gt; 1) ? \u0026ldquo;worked\u0026rdquo; : \u0026ldquo;failed\u0026rdquo;\nassert x == \u0026ldquo;worked\u0026rdquo;\nIterate over a range def x = 0\nfor (i in 0..30) {\nx += i\n}\nIterate over a list def x = 0\nfor (i in [5,3,2,1]) {\nx += i\n}\nIterate over an array def array = (0..20).toArray()\ndef x = 0\nfor (i in array) {\nx += i\n}\nIterate over a map def map = [\u0026rsquo;name\u0026rsquo;:\u0026lsquo;Roberto\u0026rsquo;, \u0026lsquo;framework\u0026rsquo;:\u0026lsquo;Grails\u0026rsquo;, \u0026rsquo;language\u0026rsquo;:\u0026lsquo;Groovy\u0026rsquo;]\ndef x = 0\nfor (e in map) {\nx += e.value\n}\n#-#\n#-# Operators\n#-#\nOperator Overloading for a list of the common operators that Groovy supports:\nhttp://www.groovy-lang.org/operators.html#Operator-Overloading\nSpread operator: invoke an action on all items of an aggregate object def technologies = [\u0026lsquo;Groovy\u0026rsquo;,\u0026lsquo;Grails\u0026rsquo;,\u0026lsquo;Gradle\u0026rsquo;]\ntechnologies*.toUpperCase() // = to technologies.collect { it?.toUpperCase() }\nSafe navigation operator: used to avoid a NullPointerException def user = User.get(1)\ndef username = user?.username\n#-#\n#-# Closures\n#-#\nA Groovy Closure is like a \u0026ldquo;code block\u0026rdquo; or a method pointer. It is a piece of\ncode that is defined and then executed at a later point.\nMore info at: http://www.groovy-lang.org/closures.html\nExample def clos = { println \u0026ldquo;Hello World!\u0026rdquo; }\nprintln \u0026ldquo;Executing the Closure:\u0026rdquo;\nclos()\nPassing parameters to a closure def sum = { a, b -\u0026gt; println a+b }\nsum(2,4)\nClosures may refer to variables not listed in their parameter list def x = 5\ndef multiplyBy = { num -\u0026gt; num * x }\nprintln multiplyBy(10)\nClosure that take a single argument can omit the parameter definition def clos = { print it }\nclos( \u0026ldquo;hi\u0026rdquo; )\nGroovy can memorize closure results [1][2][3] def cl = {a, b -\u0026gt;\nsleep(3000) // simulate some time consuming processing\na + b\n}\nmem = cl.memoize()\ndef callClosure(a, b) {\ndef start = System.currentTimeMillis()\nmem(a, b)\nprintln \u0026ldquo;Inputs(a = $a, b = $b) - took ${System.currentTimeMillis() - start} msecs.\u0026rdquo;\n}\ncallClosure(1, 2)\ncallClosure(1, 2)\ncallClosure(2, 3)\ncallClosure(2, 3)\ncallClosure(3, 4)\ncallClosure(3, 4)\ncallClosure(1, 2)\ncallClosure(2, 3)\ncallClosure(3, 4)\n#-#\n#-# Expando\n#-#\nThe Expando class is a dynamic bean so we can add properties and we can add\nclosures as methods to an instance of this class\nhttp://mrhaki.blogspot.mx/2009/10/groovy-goodness-expando-as-dynamic-bean.html\ndef user = new Expando(name:\u0026ldquo;Roberto\u0026rdquo;)\nassert \u0026lsquo;Roberto\u0026rsquo; == user.name\nuser.lastName = \u0026lsquo;Pérez\u0026rsquo;\nassert \u0026lsquo;Pérez\u0026rsquo; == user.lastName\nuser.showInfo = { out -\u0026gt;\nout \u0026laquo; \u0026ldquo;Name: $name\u0026rdquo;\nout \u0026laquo; \u0026ldquo;, Last name: $lastName\u0026rdquo;\n}\ndef sw = new StringWriter()\nprintln user.showInfo(sw)\n#-#\n#-# Metaprogramming (MOP)\n#-#\nUsing ExpandoMetaClass to add behaviour String.metaClass.testAdd = {\nprintln \u0026ldquo;we added this\u0026rdquo;\n}\nString x = \u0026ldquo;test\u0026rdquo;\nx?.testAdd()\nIntercepting method calls class Test implements GroovyInterceptable {\ndef sum(Integer x, Integer y) { x + y }\ndef invokeMethod(String name, args) {\nSystem.out.println \u0026ldquo;Invoke method $name with args: $args\u0026rdquo;\n}\n}\ndef test = new Test()\ntest?.sum(2,3)\ntest?.multiply(2,3)\nGroovy supports propertyMissing for dealing with property resolution attempts. class Foo {\ndef propertyMissing(String name) { name }\n}\ndef f = new Foo()\nassertEquals \u0026ldquo;boo\u0026rdquo;, f.boo\n#-#\n#-# TypeChecked and CompileStatic\n#-#\nGroovy, by nature, is and will always be a dynamic language but it supports\ntypechecked and compilestatic\nMore info: http://www.infoq.com/articles/new-groovy-20\nTypeChecked import groovy.transform.TypeChecked\nvoid testMethod() {}\n@TypeChecked\nvoid test() {\ntestMeethod()\ndef name = \u0026ldquo;Roberto\u0026rdquo;\nprintln naameee\n}\nAnother example: import groovy.transform.TypeChecked\n@TypeChecked\nInteger test() {\nInteger num = \u0026ldquo;1\u0026rdquo;\nInteger[] numbers = [1,2,3,4]\nDate date = numbers[1]\nreturn \u0026ldquo;Test\u0026rdquo;\n}\nCompileStatic example: import groovy.transform.CompileStatic\n@CompileStatic\nint sum(int x, int y) {\nx + y\n}\nassert sum(2,5) == 7\n","description":"","id":12,"section":"cheatsheets","tags":null,"title":"groovy.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/groovy.cheatsheet/"},{"content":"#-#\n#-# Command line\n#-#\n#-# Namenode\nCommand Description\nhadoop namenode -format Format HDFS filesystem from Namenode.\nhadoop namenode -upgrade Upgrade the NameNode.\nstart-dfs.sh Start HDFS Daemons.\nstop-dfs.sh Stop HDFS Daemons.\nstart-mapred.sh Start MapReduce Daemons.\nstop-mapred.sh Stop MapReduce Daemons.\nhadoop namenode -recover -force Recover namenode metadata after a cluster failure (may lose data).\n#-# Health\nCommand Description\nhadoop fsck / Filesystem check on HDFS.\nhadoop fsck / -files Display files during check.\nhadoop fsck / -files -blocks Display files and blocks during check.\nhadoop fsck / -files -blocks -locations Display files, blocks and its location during check.\nhadoop fsck / -files -blocks -locations -racks Display network topology for data-node locations.\nhadoop fsck -delete Delete corrupted files.\nhadoop fsck -move Move corrupted files to /lost+found directory.\n#-# Jobs\nCommand Description\nhadoop job -submit Submit the job.\nhadoop job -status Print job status completion percentage.\nhadoop job -list all List all jobs.\nhadoop job -list-active-trackers List all available TaskTrackers.\nhadoop job -set-priority Set priority for a job. Valid priorities: VERY_HIGH, HIGH, NORMAL, LOW, VERY_LOW.\nhadoop job -kill-task Kill a task.\nhadoop job -history Display job history including job details, failed and killed jobs.\n#-# Distributed FileSystem admin\nCommand Description\nhadoop dfsadmin -report Report filesystem info and statistics.\nhadoop dfsadmin -metasave file.txt Save namenode’s primary data structures to file.txt.\nhadoop dfsadmin -setQuota 10 /quotatest Set Hadoop directory quota to only 10 files.\nhadoop dfsadmin -clrQuota /quotatest Clear Hadoop directory quota.\nhadoop dfsadmin -refreshNodes Read hosts and exclude files to update datanodes.\nhadoop fs -count -q /mydir Check quota space on directory /mydir.\nhadoop dfsadmin -setSpaceQuota /mydir 100M Set quota to 100M on hdfs directory named /mydir.\nhadoop dfsadmin -clrSpaceQuota /mydir Clear quota on a HDFS directory.\nhadooop dfsadmin -saveNameSpace Backup Metadata (fsimage \u0026amp; edits). Put cluster in safe mode before this command.\n#-# Safe mode\nCommand Description\nhadoop dfsadmin -safemode enter Enter safe mode.\nhadoop dfsadmin -safemode leave Leave safe mode.\nhadoop dfsadmin -safemode get Get the status of mode.\nhadoop dfsadmin -safemode wait Wait until HDFS finishes data block replication.\n#-# Configuration files\nCommand Description\nhadoop-env.sh Sets ENV variables for Hadoop.\ncore-site.xml Parameters for entire Hadoop cluster.\nhdfs-site.xml Parameters for HDFS and its clients.\nmapred-site.xml Parameters for MapReduce and its clients.\nmasters Host machines for secondary Namenode.\nslaves List of slave hosts.\n#-# Map-Reduce admin\nCommand Description\nhadoop mradmin -safemode get Check Job tracker status.\nhadoop mradmin -refreshQueues Reload mapreduce configuration.\nhadoop mradmin -refreshNodes Reload active TaskTrackers.\nhadoop mradmin -refreshServiceAcl Force Jobtracker to reload service ACL.\nhadoop mradmin -refreshUserToGroupsMappings Force jobtracker to reload user group mappings.\n#-# Balancer\nCommand Description\nstart-balancer.sh Balance the cluster.\nhadoop dfsadmin -setBalancerBandwidth Adjust bandwidth used by the balancer.\nhadoop balancer -threshold 20 Limit balancing to only 20% resources in the cluster.\n#-# Filesystem\nCommand Description\nhadoop fs -mkdir Create a directory (mydir) in HDFS.\nhadoop fs -ls List files and directories in HDFS.\nhadoop fs -cat View a file content.\nhadoop fs -du Check disk space usage in HDFS.\nhadoop fs -expunge Empty trash on HDFS.\nhadoop fs -chgrp Change group membership of a file.\nhadoop fs -chown Change file ownership.\nhadoop fs -rm Delete a file in HDFS.\nhadoop fs -touchz Create an empty file.\nhadoop fs -stat Check the status of a file.\nhadoop fs -test -e Check if file exists on HDFS.\nhadoop fs -test -z Check if file is empty on HDFS.\nhadoop fs -test -d Check if file1 is a directory on HDFS.\n#-# Misc\nCommand Description\nhadoop fs -copyFromLocal Copy from local fileystem to HDFS.\nhadoop fs -copyToLocal Copy from hdfs to local filesystem.\nhadoop fs -put Copy from remote location to HDFS.\nhadoop fs -get Copy from HDFS to remote directory.\nhadoop distcp \u0026lt;input_url\u0026gt; \u0026lt;output_url\u0026gt; Copy data from one cluster to another using the cluster URL.\nhadoop fs -mv Move data file from the local directory to HDFS.\nhadoop fs -setrep -w 3 Set the replication factor for file1 to 3.\nhadoop fs -getmerge Merge files in mydir directory and download it as one big file.\n","description":"","id":13,"section":"cheatsheets","tags":null,"title":"hadoop.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/server/hadoop.cheatsheet/"},{"content":"#-#\n#-# Headers\n#-#\n#-# Request headers\nField Example Description\nAccept Accept: text/html Acceptable Content-Types for the response.\nAccept-Charset Accept-Charset: utf-8 Acceptable character sets.\nAccept-Encoding Accept-Encoding: gzip, deflate Acceptable encodings (for compression).\nAccept-Language Accept-Language: en-US Acceptable human langages.\nAccept-Datetime Accept-Datetime: Fri, 21 Dec 2012 06:06:06 GMT Acceptable time of last update.\nAuthorization Authorization: Basic YnJvOmhvbmVzdGx5 HTTP authentication credentials.\nCache-Control Cache-Control: no-cache Directives which caching mechanisms must obey.\nConnection Connection: keep-alive Type of preffered connection for the client.\nCookie Cookie: $Version=1; Skin=new; An http cookie from the client (see: Set-Cookie).\nContent-Length Content-Length: 1337 The length of the body in bytes.\nContent-MD5 Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ== A base-64 encoded MD5 checksum for the body.\nContent-Type Content-Type: application/x-www-form-urlencoded The MIME type of the request body.\nDate Date: Sun, 23 Jun 2013 12:00:00 GMT The date and time which the message was sent.\nExpect Expect: 100-continue Indicates server behaviors the client requires.\nFrom From: john.doe@gmail.com The email address of the user making the request.\nHost Host: dnslookup.domain.com The host url, used for vhosts and proxying.\nIf-Match If-Match: \u0026ldquo;737060cd8c284d8af7ad3082f209582d\u0026rdquo; Only perform the action if the client-supplied entity matches the one on the server.\nIf-Modified-Since If-Modified-Since: Wed, Dec 25 2012 11:11:11 GMT If content is unchanged, the server may return 304 Not Modified.\nIf-None-Match If-None-Match: \u0026ldquo;737060cd8c284d8af7ad3082f209582d\u0026rdquo; If content is unchanged (based on ETags), the server may return a 304 Not Modified.\nIf-Range If-Range: \u0026ldquo;737060cd8c284d8af7ad3082f209582d\u0026rdquo; Send missing parts if the entity is unchanged (used for resuming downloads).\nIf-Unmodified-Since If-Unmodified-Since: Wed, Dec 25 2012 11:11:11 GMT If content is unchanged, the server must return 304 Not Modified.\nMax-Forwards Max-Forwards: 10 The maximum number of times a message can be forwarded through proxies/gateways.\nOrigin Origin: http://domain.com Used for initiating CORS requests.\nPragma Pragma: no-cache Directives which may or may not have effects anywhere along the request/response chain.\nRange Range: bytes=136-1337 Request only parts of an entity (used for resuming downloads).\nReferer Referer: http://domain.com The address of the web page which had the link followed by the client.\nTE TE: trailers, deflate Transfer encodings the client is willing to accept, including trailers.\nUpgrade Upgrade: websocket Request that the server upgrade to another protocol.\nUser-Agent User-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) The user agent string of the client.\nVia Via: 1.0 fred, 1.1 example.com (Apache/1.1) Information about proxies through which the request was sent.\nWarning Warning: 199 Miscellaneous warning A general warning about potential issues with the body.\nX-Requested-With X-Requested-With: XMLHttpRequest Generally used to identify AJAX requests.\nDNT DNT: 1 Mozilla-proposed \u0026ldquo;do not track\u0026rdquo; directive.\nX-Forwarded-For X-Forwarded-For: 24.237.53.237 De-facto standard for identifying the originating client IP address though an HTTP proxy load balancer.\nX-Forwarded-Proto X-Forwarded-Proto: https De-facto standard for identifying the originating protocol used by the client.\nFront-End-Https Front-End-Https: on Non-standard header used by Microsoft applications and load balancers.\nX-ATT-DeviceId X-ATT-DeviceId: MakeModel/Firmware Used by AT\u0026amp;T devices to specify the MakeModel/Firmware (a subset of the User-Agent).\nX-Wap-Profile X-Wap-Profile: http://wap.mobile.com/schema.xml Links to an XMLFile describing the connecting device (such as AT\u0026amp;T phones).\n#-# Response headers\nField Example Description\nAccess-Control-Allow-Origin Access-Control-Allow-Origin: * Specifies which websites are allowed to do CORS.\nAccept-Ranges Accept-Ranges: bytes Partial content range types supported.\nAge Age: 42 Age of entity in proxy cache (seconds).\nAllow Allow: GET, HEAD Valid HTTP methods for the resource (paired with 405 Method not allowed).\nCache-Control Cache-Control: max-age=3600 Specifies behavior to caching proxies from server to client (in seconds).\nConnection Connection: close Options desired for the connection.\nContent-Encoding Content-Encoding: gzip The type of encoding used for the response body (used for compression).\nContent-Language Content-Language: en-US The human language in the response body.\nContent-Length Content-Length: 123 Length of the response body in bytes.\nContent-Location Content-Location: /index.html Alternate location for the resource.\nContent-MD5 Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ== A Base64-encoded MD5 checksum for the response body.\nContent-Disposition Content-Disposition: attachment; filename=\u0026ldquo;f.csv\u0026rdquo; Directives used by the client to prompt the user to download a response as a file.\nContent-Type Content-Type: text/html; charset=utf-8 The MIME type of the response body.\nEtag ETag: \u0026ldquo;737060cd8c284d8af7ad3082f209582d\u0026rdquo; A unique string used to identify a specific version of a resource.\nExpires Expires: Fri, 29 Nov 2013 12:34:56 GMT A date/time after which the resource should be considered outdated by the client.\nLast-Modified Last-Modified: Sat, 13 Oct 2012 09:35:00 GMT The date at which the resource was last modified.\nLink Link: ; rel=\u0026ldquo;alternate\u0026rdquo; Used to specify relationships with other resources.\nLocation Location: http://www.google.com The location of the resource (used in 3XX redirects).\nP3P P3P: CP=\u0026ldquo;This is not a P3P policy See [url]\u0026rdquo; Most browsers do not fully implement it, but may contain filler text in order to convince browsers to grant permissions for third party cookies.\nPragma Pragma: no-cache Directives which may or may not have efiects anywhere along the request/response chain.\nProxy-Authenticate Proxy-Authenticate: Basic Request authentication to access a proxy.\nRetry-After Retry-After: 60 If the resource is unavailable, the client should try again after some given time (seconds).\nServer Server: Apache/2.4.1 (Unix) A name for the server.\nSet-Cookie UserID=usr; Max-Age=3600; Version=1 Set an HTTP cookie.\nStatus Status: 200 OK HTTP status code.\nStrict-Transport-Security Strict-Transport-Security: max-age=16070400; Used to specify HTTPS-only policies.\nTrailer Trailer: Max-Forwards Headers which will be in the trailers of a chunked transfer encoding.\nTransfer-Encoding Transfer-Encoding: chunked The method of encoding used to transfer the response (defined methods: chunked, com-press, deate, gzip, identity).\nVary Vary: * Specifies request headers to match against when deciding caching behavior.\nVia Via: 1.0 fred, 1.1 example.com (Apache/1.1) Information about proxies through which the request was sent.\nWarning Warning: 199 Miscellaneous warning A general warning about potential issues with the body.\nWWW-Authenticate WWW-Authenticate: Basic Indicates which authentication scheme should be used to access the requested resource.\nRefresh Refresh: 5; url=http://domain.com A de-facto standard introduced by Netscape and supported in most browsers, used to redirect after some amount of seconds.\nX-Frame-Options X-Frame-Options: deny Used to control in-frame rendering in order to avoid \\clickjacking\u0026quot;.\nX-XSS-Protection X-XSS-Protection: 1; mode=block Used to control cross-site scripting.\nX-Content-Security-Policy X-Content-Security-Policy: default-src \u0026lsquo;self\u0026rsquo; Used to specify Content Securty Policy.\nX-Webkit-CSP X-Webkit-CSP: default-src \u0026lsquo;self\u0026rsquo; Also used to specify Content Securty Policy.\nX-Powered-By X-Powered-By: PHP/5.4.0 Used to specify which technology is supporting the web application.\nX-UA-Compatible X-UA-Compatible: IE=EmulateIE7 Specifies a preferred rendering engine, often used to trigger backwards-compatibility modes.\n#-#\n#-# Methods\n#-#\nMethod Description\nGET Request a representation of the resource.\nHEAD Request only the headers for the resource.\nPOST Process the request body with the resource.\nPUT Create or update a new resource with the contents of the request body.\nDELETE Remove the specified resource.\nOPTIONS Return the HTTP methods the specified resource supports.\nTRACE Echo the received request.\nCONNECT Convert the connection to a transparent tcp/ip tunnel, usually to allow SSL/TLS through an unencrypted HTTP proxy.\nPATCH Apply partial modifications to the resource.\n#-#\n#-# Status codes\n#-#\n#-# 1xx / Informational\nCode Title Summary\n100 Continue Client should continue with request.\n101 Switching Protocols Server is switching protocols.\n103 Checkpoint Resume aborted PUT or POST requests.\n122 Request-URI too long URI is longer than a maximum of 2083 characters.\n#-# 2xx / Success\nCode Title Summary\n200 Success Standard response for successful HTTP requests.\n201 Created Request has been fulfilled; new resource created.\n202 Accepted Request accepted, processing pending.\n203 Non-Authoritative Info Request processed, information may be from another source.\n204 No Content Request processed, no content returned.\n205 Reset Content Request processed, no content returned, reset document view.\n206 Partial Content Partial resource return due to request header.\n208 Already Reported Results previously returned.\n#-# 3xx / Redirection\nCode Title Summary\n300 Multiple Choices Multiple options for the resource delivered.\n301 Moved Permanently This and all future requests directed to the given URI.\n302 Found Temporary response to request found via alternative URI.\n303 See Other Permanent response to request found via alternative URI.\n304 Not Modified Resource has not been modified since last requested.\n305 Use Proxy Content located elsewhere, retrieve from there.\n306 Switch Proxy Switchubsequent requests should use the specified proxy.\n307 Temporary Redirect Connect again to different URI as provided.\n#-# 4xx / Client Error\nCode Title Summary\n400 Bad Request Request cannot be fulfilled due to bad syntax.\n401 Unauthorized Authentication is possible but has failed.\n402 Payment Required Payment required.\n403 Forbidden Server refuses to respond to request.\n404 Not Found Requested resource could not be found.\n405 Method Not Allowed Request method not supported by that resource.\n406 Not Acceptable Content not acceptable according to the Accept headers.\n407 Proxy Auth Required Client must first authenticate itself with the proxy.\n408 Request Timeout Server timed out waiting for the request.\n409 Conflict Request could not be processed because of conflict.\n410 Gone Resource is no longer available and will not be available again.\n411 Length Required Request did not specify the length of its content.\n412 Precondition Failed Server does not meet request preconditions.\n413 Request Entity Too Large Request is larger than the server is willing or able to process.\n414 Request-URI Too Long URI provided was too long for the server to process.\n415 Unsupported Media Type Server does not support media type.\n416 Requested Range Not Satisfiable Client has asked for unprovidable portion of the file.\n417 Expectation Failed Server cannot meet requirements of Expect request-header field.\n418 I\u0026rsquo;m a teapot I\u0026rsquo;m a teapot.\n420 Enhance Your Calm Twitter rate limiting.\n426 Upgrade Required Client should switch to a different protocol.\n444 No Response Server returns no information and closes the connection.\n449 Retry With Request should be retried after performing action.\n450 Blocked by WPC Windows Parental Controls blocking access to webpage.\n499 Client Closed Request Connection closed by client while HTTP server is processing.\n#-# 5xx / Server Error\nCode Title Summary\n500 Internal Server Error Generic error message\n501 Not Implemented Server does not recognise method or lacks ability to fulfill.\n502 Bad Gateway Server received an invalid response from upstream server.\n503 Service Unavailable Server is currently unavailable.\n504 Gateway Timeout Gateway did not receive response from upstream server.\n505 HTTP Version Not Supported Server does not support the HTTP protocol version.\n508 Loop Detected Server detected an infinite loop while processing the request.\n509 Bandwidth Limit Exceeded Bandwidth limit exceeded.\n510 Not Extended Further extensions to the request are required.\n598 Network read timeout error Network read timeout behind the proxy.\n599 Network connect timeout error Network connect timeout behind the proxy.\n#-# Extensions\nCode Title Summary\n102 Processing Server has received and is processing the request.\n207 Multi-Status XML, can contain multiple separate responses.\n226 IM Used Request fulfilled, reponse is instance-manipulations.\n308 Permanent Redirect Connect again to a different URI using the same method.\n422 Unprocessable Entity Request unable to be followed due to semantic errors.\n423 Locked Resource that is being accessed is locked.\n424 Failed Dependency Request failed due to failure of a previous request.\n428 Precondition Required Origin server requires the request to be conditional.\n429 Too Many Requests User has sent too many requests in a given amount of time.\n431 Request Header Fields Too Large Server is unwilling to process the request.\n451 Wrong Exchange server The server cannot reach the client\u0026rsquo;s mailbox.\n506 Variant Also Negotiates Content negotiation for the request results in a circular reference.\n507 Insufficient Storage Server is unable to store the representation.\n511 Network Authentication Required Client needs to authenticate to gain network access.\n","description":"","id":14,"section":"cheatsheets","tags":null,"title":"http.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/server/protocol/http.cheatsheet/"},{"content":"#-#\n#-# Annotations\n#-#\n#-# @HystrixCollapser\nProperty Default Description\ncollapserKey Name of annotated method Specifies a collapser key.\nbatchMethod - Method name of batch command which must have the following signature: java.util.List method(java.util.List).\nscope Scope.REQUEST Defines what scope the collapsing should occur within.\ncollapserProperties {} Specifies collapser properties.\n#-# @HystrixCommand\nProperty Default Description\ngroupKey Class name of annotated method Used for grouping together commands such as for reporting, alerting, etc.\ncommandKey Name of annotated method Hystrix command key\nthreadPoolKey - The thread-pool key is used to represent a HystrixThreadPool for monitoring, metrics publishing, caching and other such uses.\nfallbackMethod - The method to process fallback logic which should be defined in the same class as the HystrixCommand.\ncommandProperties {} Specifies command properties\nthreadPoolProperties {} Specifies thread pool properties.\nignoreExceptions {} Defines exceptions which should be ignored and wrapped to throw in HystrixBadRequestException.\n#-# @HystrixProperty\nProperty Default Description\nname - Property name.\nvalue - Property value.\n#-# @CacheResult\nProperty Default Description\ncacheKeyMethod - A method name to be used to get a key for request caching.\n#-# @CacheRemove\nProperty Default Description\ncommandKey Name of annotated method The name of the Hystrix command for which the cache should be cleared.\ncacheKeyMethod - A method name to be used to get a key for request caching.\n#-# @CacheKey\nProperty Default Description\nvalue - Allows to specify the name of a certain argument property.\n#-#\n#-# Properties\n#-#\n#-# @HystrixCollapser.collapserProperties\nProperty Default Description\nmaxRequestsInBatch Int.MAX The max nr of requests allowed in a batch before this triggers a batch execution.\ntimerDelayInMilliseconds 10 The number of milliseconds after the creation of the batch that its execution is triggered.\nrequestCache.enabled true Indicates whether request caching is enabled for HystrixCollapser.execute() and HystrixCollapser.queue() invocations.\n#-# @HystrixCommand.commandProperties\nExecution Property Default Description\nexecution.isolation.strategy THREAD The isolation strategy HystrixCommand.run() executes with.\nexecution.isolation.thread.timeoutInMilliseconds 1000 The time in milliseconds after which the caller will observe a timeout and walk away from the command execution.\nexecution.timeout.enabled true Indicates whether the HystrixCommand.run() execution should have a timeout.\nexecution.isolation.thread.interruptOnTimeout true Indicates whether the HystrixCommand.run() execution should be interrupted when a timeout occurs.\nexecution.isolation.semaphore.maxConcurrentRequests 10 Max nr of requests allowed to a HystrixCommand.run() method when using ExecutionIsolationStrategy.SEMAPHORE.\nFallback Property Default Description\nfallback.isolation.semaphore.maxConcurrentRequests 10 The max nr of requests a HystrixCommand.getFallback() method is allowed to make from the calling thread.\nfallback.enabled true Determines whether a call to HystrixCommand.getFallback() will be attempted when failure or rejection occurs.\nCircuit Breaker Property Default Description\ncircuitBreaker.enabled true Determines whether a circuit breaker will be used to track health and to short-circuit requests if it trips.\ncircuitBreaker.requestVolumeThreshold 20 The minimum number of requests in a rolling window that will trip the circuit.\ncircuitBreaker.sleepWindowInMilliseconds 5000 The amount of time, after tripping the circuit, to reject requests before allowing attempts again to determine if the circuit should again be closed.\ncircuitBreaker.errorThresholdPercentage 50 The error percentage at or above which the circuit should trip open and start short-circuiting requests to fallback logic.\ncircuitBreaker.forceOpen false Forces the circuit breaker into an open (tripped) state in which it will reject all requests. Takes precedence over circuitBreaker.forceClosed.\ncircuitBreaker.forceClosed false Forces the circuit breaker into a closed state in which it will allow requests regardless of the error percentage.\nMetrics Property Default Description\nmetrics.rollingStats.timeInMilliseconds 10000 The duration of the statistical rolling window, in milliseconds. This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing.\nmetrics.rollingStats.numBuckets 10 The number of buckets the rolling statistical window is divided into.\nmetrics.rollingPercentile.enabled true Indicates whether execution latencies should be tracked and calculated as percentiles.\nmetrics.rollingPercentile.timeInMilliseconds 60000 The duration of the rolling window in which execution times are kept to allow for percentile calculations\nmetrics.rollingPercentile.numBuckets 6 The number of buckets the rollingPercentile window will be divided into.\nmetrics.rollingPercentile.bucketSize 100 The maximum number of execution times that are kept per bucket. If more executions occur during the time they will wrap around and start over-writing at the beginning of the bucket.\nmetrics.healthSnapshot.intervalInMilliseconds 500 The time to wait between allowing health snapshots to be taken that calculate success and error percentages and affect circuit breaker status.\nRequest Context Property Default Description\nrequestCache.enabled true Indicates whether HystrixCommand.getCacheKey() should be used with HystrixRequestCache to provide de-duplication functionality via request-scoped caching.\nrequestLog.enabled true Indicates whether HystrixCommand execution and events should be logged to HystrixRequestLog\n#-# @HystrixCommand.threadPoolProperties\nProperty Default Description\ncoreSize 10 The maximum number of HystrixCommands that can execute concurrently.\nmaxQueueSize -1 The maximum queue size of the BlockingQueue implementation. If you set this to -1 then SynchronousQueue will be used, otherwise a positive value will be used with LinkedBlockingQueue.\nqueueSizeRejectionThreshold 5 The queue size rejection threshold — an artificial maximum queue size at which rejections will occur even if maxQueueSize has not been reached.\nkeepAliveTimeMinutes 1 The keep-alive time.\nmetrics.rollingStats.timeInMilliseconds 10000 The duration of the statistical rolling window. This is how long metrics are kept for the thread pool.\nmetrics.rollingStats.numBuckets 10 The number of buckets the rolling statistical window is divided into.\n#-#\n#-# Examples\n#-#\n#-# Commands\nSynchronous Execution @HystrixCommand(groupKey=\u0026ldquo;UserGroup\u0026rdquo;, commandKey = \u0026ldquo;GetUserByIdCommand\u0026rdquo;)\npublic User getUserById(String id) {\nreturn userResource.getUserById(id);\n}\nAsynchronous Execution @HystrixCommand\npublic Future getUserByIdAsync(final String id) {\nreturn new AsyncResult() {\n@Override\npublic User invoke() {\nreturn userResource.getUserById(id);\n}\n};\n}\nReactive Execution @HystrixCommand\npublic Observable getUserById(final String id) {\nreturn new ObservableResult() {\n@Override\npublic User invoke() {\nreturn userResource.getUserById(id);\n}\n};\n}\nFallback @HystrixCommand(fallbackMethod = \u0026ldquo;defaultUser\u0026rdquo;)\npublic User getUserById(String id) {\nreturn userResource.getUserById(id);\n}\n@HystrixCommand(fallbackMethod = \u0026ldquo;defaultUserSecond\u0026rdquo;)\nprivate User defaultUser(String id) {\nreturn new User();\n}\n@HystrixCommand\nprivate User defaultUserSecond(String id) {\nreturn new User(\u0026ldquo;def\u0026rdquo;, \u0026ldquo;def\u0026rdquo;);\n}\nError Propagation @HystrixCommand(ignoreExceptions = {BadRequestException.class})\npublic User getUserById(String id) {\nreturn userResource.getUserById(id);\n}\n#-# Configuration\nCommand Properties @HystrixCommand(\ncommandProperties = {\n@HystrixProperty(name = \u0026ldquo;execution.isolation.thread.timeoutInMilliseconds\u0026rdquo;, value = \u0026ldquo;500\u0026rdquo;)\n},\nthreadPoolProperties = {\n@HystrixProperty(name = \u0026ldquo;coreSize\u0026rdquo;, value = \u0026ldquo;30\u0026rdquo;),\n@HystrixProperty(name = \u0026ldquo;maxQueueSize\u0026rdquo;, value = \u0026ldquo;101\u0026rdquo;),\n@HystrixProperty(name = \u0026ldquo;keepAliveTimeMinutes\u0026rdquo;, value = \u0026ldquo;2\u0026rdquo;),\n@HystrixProperty(name = \u0026ldquo;queueSizeRejectionThreshold\u0026rdquo;, value = \u0026ldquo;15\u0026rdquo;),\n@HystrixProperty(name = \u0026ldquo;metrics.rollingStats.numBuckets\u0026rdquo;, value = \u0026ldquo;12\u0026rdquo;),\n@HystrixProperty(name = \u0026ldquo;metrics.rollingStats.timeInMilliseconds\u0026rdquo;, value = \u0026ldquo;1440\u0026rdquo;)\n}\n)\npublic User getUserById(String id) {\nreturn userResource.getUserById(id);\n}\nHystrix collapser @HystrixCollapser(batchMethod = \u0026ldquo;getUserByIds\u0026rdquo;)\npublic Future getUserById(String id) {\nreturn null;\n}\n@HystrixCommand\npublic List getUserByIds(List ids) {\nList users = new ArrayList();\nfor (String id : ids) {\nusers.add(new User(id, \u0026ldquo;name: \u0026quot; + id));\n}\nreturn users;\n}\nFuture f1 = userService.getUserById(\u0026ldquo;1\u0026rdquo;);\nFuture f2 = userService.getUserById(\u0026ldquo;2\u0026rdquo;);\nFuture f3 = userService.getUserById(\u0026ldquo;3\u0026rdquo;);\nFuture f4 = userService.getUserById(\u0026ldquo;4\u0026rdquo;);\nFuture f5 = userService.getUserById(\u0026ldquo;5\u0026rdquo;);\n#-# Caching\nCache key generator @CacheResult(cacheKeyMethod = \u0026ldquo;getUserByNameCacheKey\u0026rdquo;)\n@HystrixCommand\npublic User getUserByName(String name) {\nreturn storage.getByName(name);\n}\nprivate Long getUserByNameCacheKey(String name) {\nreturn name;\n}\nGet-Set-Get pattern @CacheResult\n@HystrixCommand\npublic User getUserById(@CacheKey String id) { // GET\nreturn storage.get(id);\n}\n@CacheRemove(commandKey = \u0026ldquo;getUserById\u0026rdquo;)\n@HystrixCommand\npublic void update(@CacheKey(\u0026ldquo;id\u0026rdquo;) User user) { // SET\nstorage.put(user.getId(), user);\n}\n#-#\n#-# References\n#-#\n[01] https://github.com/Netflix/Hystrix/wiki\n[02] https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica\n","description":"","id":15,"section":"cheatsheets","tags":null,"title":"hystrix.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/library/hystrix.cheatsheet/"},{"content":"#-#\n#-# Nick\n#-#\nRegister current nickname. /msg nickserv register you@example.com\nIndent your nickname. /msg nickserv identify Set current nickname. /nick vrachieru\n#-#\n#-# Networks / Servers\n#-#\nBind nickname with network. /network add -nick Connect to the network. /connect List networks. /network list\nBind server with network. /server add -auto -network List servers. /server list\n#-#\n#-# Channels\n#-#\nJoin to a channel. /join #channel\nLeave current channel. /part\nList who is at the channel. /n\n#-#\n#-# Windows\n#-#\nOpen a private message, use /q or /wc also to close private window /q, /query nick\nClose window /wc\n/window close\nGo to status window Alt+1\nGo to num window Alt+\nGo to previous window Ctrl+P\nGo to next window. Ctrl+N\n#-#\n#-# Settings\n#-#\nList all setting = value settings /set\nList all timestamp* = value settings /set timestamp\nset the appearance of the timestamps, in this case add seconds. /set timestamp_format = %H:%M:%S\nHide email from server /msg nickserve SET HIDEMAIL ON\nSave changes to irssi config file (~/.irssi/config). /save\n","description":"","id":16,"section":"cheatsheets","tags":null,"title":"irssi.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/chat/irssi.cheatsheet/"},{"content":"#-#\n#-# Keyboard shortcuts\n#-#\n#-# Global\nShortcut Description\ngd Go to Dashboard\ngp Browse to a Project\nga Go to Agile\ngi Find Issues\ngg Administration Quick Search\n/ Quick Search\n. Quick Operations\nc Create an Issue\nAlt+Ctrl+s Form Submit\n#-# Navigation\nShortcut Description\no View selected Issue\nj Next Issue\nk Previous Issue\n[ Dock/Undock the Filters Panel\nn Next Activity\np Previous Activity\nf Focus search field\nu Search for issues\nt Switch filter view\nz Detail View Order by\n#-# Issue Actions\nShortcut Description\ne Edit Issue\na Assign Issue\nm Comment on Issue\nl Edit Issue Labels\n, Jump to fields for editing\ni Assign To Me\n#-# Agile\nShortcut Description\n1 Plan mode\n2 Work mode\n3 Report mode\nz Presentation mode\nn Next Column\np Previous Column\nt Hide/Show Detail View\nToggle all swimlanes\rst Send to Top\nsb Send to Bottom\n","description":"","id":17,"section":"cheatsheets","tags":null,"title":"jira.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/tools/issue-tracking/jira.cheatsheet/"},{"content":"#-#\n#-# Headers\n#-#\nh1 h3 Header 1 Header 2 #-#\n#-# Links\n#-#\nlink\n[link][google]\n[google]: http://google.com\nhttp://google.com\n#-#\n#-# Images\n#-#\n#-#\n#-# Emphasis\n#-#\nitalic\nitalic\nbold\nbold\n#-#\n#-# Code\n#-#\n4 space indent\rBlockquotes\nThis is\na blockquote\nNested\nBlockquote\n#-#\n#-# Horizontal line\n#-# ","description":"","id":18,"section":"cheatsheets","tags":null,"title":"markdown.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/markdown.cheatsheet/"},{"content":"#-#\n#-# Commands\n#-#\n#-# General command structure\nmvn -P #-# Simple stuff\nmvn help\nmvn compile\nmvn validate\nmvn verify\nmvn test\nmvn clean\nmvn clean package\nmvn clean install\nmvn clean deploy\n#-#\n#-# Dependencies\n#-#\n#-# Scope\nScope Description\ncompile Compile dependencies are available in all classpaths of a project and are propagated to dependent projects. (default)\nprovided Similar to compile, but indicates you expect the JDK or a container to provide the dependency at runtime.\nruntime Indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath.\ntest Indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases.\nsystem This scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository.\nimport Indicates that the specified POM should be replaced with the dependencies in that POM\u0026rsquo;s section. Since they are replaced, dependencies with a scope of import do not actually participate in limiting the transitivity of a dependency.\n#-#\n#-# Artifacts\n#-#\nmvn archetype:create # Create pom.xml\nmvn archetype:create -DgroupId= \\ # Create JAR\n-DartifactId=\nmvn archetype:create -DgroupId= \\ # Create WAR\n-DartifactId= -DarchetypeArtifactId=maven-archetype-webapp\nmvn install:install-file # Install dependencies\n#-#\n#-# Releasing\n#-#\nmvn deploy:deploy-file \u0026lt;params \u0026hellip;\u0026gt;\nUseful release options: -P -Dusername= -Dpassword= mvn release:prepare\nmvn release:clean\nmvn release:perform\n","description":"","id":19,"section":"cheatsheets","tags":null,"title":"maven.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/tools/build-automation/maven.cheatsheet/"},{"content":"welcome to science #1\n","description":"","id":20,"section":"science","tags":null,"title":"sc #1","uri":"https://guinetn.github.io/science/welcome/"},{"content":"#-#\n#-# Chat types\n#-#\nTo find out what type of chat you\u0026rsquo;re in, simply type /get name into the chat window and press Enter.\nType Starts with\ncloud-based 19:\u0026hellip;\np2p-based #skypename\u0026hellip;\n#-#\n#-# Cloud-based commands and roles\n#-#\nRole Description\nAdmin Also known as chat hosts/masters. Admins can promote other people to admins.\nSpeaker A member who can post messages into the chat and participate in calls.\nCommand Description\n/add [skypeName] Adds a contact to the chat.\n/alertson [text] Allows you to specify what needs to appear in a chat for you to be notified.\n/alertsoff Disable message notifications.\n/find [text] Finds the first instance of a specific text in a chat.\n/get admins Details the people administrating the chat.\n/get options Details active options for current chat.\n/get role Details your role in the chat.\n/showmembers Displays list of members and their roles.\n/get uri Creates a URL link that other people can use to join the group chat.\n/golive Starts a group call with other participants of the chat.\n/info Details number of people in chat and maximum number available.\n/kick [skypeName] Eject chat member.\n/leave Leave current group chat.\n/me [text] Your name will appear followed by any text you write.\n/remotelogout Sign out all other instances except the current one.\n/setrole [skypeName] Allows you to set a role to each chat member. MASTER | USER | ADMIN\n/showplaces Lists other instances where this Skype name is currently signed in.\n/topic [text] Changes the chat topic.\n/set options [[+|-]flag] Sets options for this chat.\n- HISTORY_DISCLOSED - Joiners can see the conversation that took place before they joined. The limit that they can see is either 400 messages or two weeks of time, depending on which is reached first.\n- JOINING_ENABLED - New users can join the chat.\n#-#\n#-# P2P-based commands and roles\n#-#\nRole Description\nCreator The member who created the chat. There can be only one creator per chat. Only the creator can promote other members to masters.\nMaster Also known as chat hosts. Masters cannot promote other people to masters.\nHelper A semi-privileged member. Helpers will not be affected by the USERS_ARE_LISTENERS option. Helpers cannot promote or demote other members.\nUser A member who can post messages into the chat.\nListener A member who can see messages but not post into the chat.\nApplicant A member waiting for acceptance into the chat. Note: once accepted into the chat, members cannot be demoted to applicants.\nCommand Description\n/add [skypeName] Adds a contact to the chat. For instance: /add alex_cooper1 will add that member to the chat.\n/alertson [text] Allows you to specify what needs to appear in a chat for you to be notified. For example, /alertson London will only alert you when the word \u0026ldquo;London\u0026rdquo; appears in the chat.\n/alertsoff Disable message notifications.\n/clearpassword Removes the password security.\n/find [text] Finds specific text in a chat. For example, /find Charlie will return the first instance of the word \u0026ldquo;Charlie\u0026rdquo; in the chat.\n/get allowlist Details people with access to the chat.\n/get banlist Details people banned from the chat.\n/get creator Details the person who created the chat.\n/get guidelines See the current chat\u0026rsquo;s guidelines.\n/get options Details active options for current chat - see /set options below for a list of the options available.\n/get password_hint Get the password hint.\n/get role Details your role in the chat.\n/get uri Creates a URL link that other people can use to join the group chat.\n/golive Starts a group call with other participants of the chat.\n/info Details number of people in chat and maximum number available.\n/kick [skypeName] Eject chat member.\n/kickban [skypeName] Ejects chat member and prevents them from rejoining chat. For instance, /kickban alex_cooper1 will eject that member from the chat and ban them from rejoining.\n/leave Leave current group chat.\n/me [text] Your name will appear followed by any text you write. For instance, /me working from home will cause the phrase \u0026ldquo;working from home\u0026rdquo; to appear next to your name in the chat. You can use this to send a message about your activities or status.\n/remotelogout Sign out all other instances except the current one. This will also stop push notifications on all other instances.\n/set allowlist [[+|-]mask] Sets the members allowed in the chat. For instance, /set allowlist +alex_cooper1 will allow that member to join the chat.\n/set banlist [[+|-]mask] Sets which members are banned from the chat. For instance, /set banlist +alex_cooper1 will ban that member from the chat. /set banlist -alex_cooper1 will allow them to rejoin it.\n/set guidelines [text] Set a chat’s guidelines. For instance, /set guidelines No spoilers! These can be returned to be viewed in the chat by the command /get guidelines.\n/set password [text] Create a password (no spaces allowed).\n/set password_hint [text] Create the chat\u0026rsquo;s password hint text.\n/setpassword [pass] [hint] Create a password and password hint for the chat.\n/setrole [skypeName] Allows you to set a role to each chat member.\n- MASTER\n- HELPER\n- USER\n- LISTENER\n/showplaces Lists other instances where this Skype name is currently signed in.\n/topic [text] Changes the chat topic.\n/whois [skypeName] Provides details about a chat member such as current role.\n/set options [[+|-]flag] Sets options for this chat. For example: /set options -JOINING_ENABLED switches off the JOINING_ENABLED option, while /set options +JOINERS_BECOME_APPLICANTS will switch on the JOINERS_BECOME_APPLICANTS option.\n- HISTORY_DISCLOSED - Joiners can see the conversation that took place before they joined. The limit that they can see is either 400 messages or two weeks of time, depending on which is reached first.\n- JOINERS_BECOME_APPLICANTS - New users can join the chat, but cannot post or receive messages until authorized by a CREATOR or MASTER (see the table below for more information on roles).\n- JOINERS_BECOME_LISTENERS - New users can receive messages but cannot post any until promoted to the USER role.\n- JOINING_ENABLED - New users can join the chat.\n- TOPIC_AND_PIC_LOCKED_FOR_USERS - Only a user with a CREATOR role will be able to change the topic text or accompanying picture for the chat.\n- USERS_ARE_LISTENERS - Users with a USER role will be unable to post messages.\n","description":"","id":21,"section":"cheatsheets","tags":null,"title":"skype.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/chat/skype.cheatsheet/"},{"content":"#-#\n#-# Actions\n#-#\nKeyBind + Combination Key Description\nCtrl+b % Split the current window vertically into two panes.\nCtrl+b :split-window Horizontally split window or current pane.\nCtrl+b o Switch to the next pane.\nCtrl+b c Open new window.\nCtrl+b l Move to previous window.\nCtrl+b n Move to next window.\nCtrl+b p Move to previous window.\nCtrl+b d Detach current client.\nCtrl+b x Kill the current pane.\nCtrl+b \u0026amp; Kill the current window.\nCtrl+b , Rename the current window.\nCtrl+b q Display pane numbers.\nCtrl+b ? List all keybindings.\nCtrl+b { Move the current pane to previous.\nCtrl+b } Move the current pane to next.\nCtrl+b :break-pane Detach pane into its own window.\nCtrl+b w List all windows.\nCtrl+b 0-9 To select window.\n#-#\n#-# Pane Resizing\n#-#\nKeyBind + Combination Key Description\nCtrl+b :resize-pane Resize current pane down by default.\nCtrl+b :resize-pane -U Upward Resize current pane.\nCtrl+b :resize-pane -R Resize current pane to right.\nCtrl+b :resize-pane -L Resize current pane to left.\nCtrl+b :resize-pane 40 Resize current pane down by 40 cells.\nCtrl+b :resize-pane -L 40 Resize current pane left by 40 cells.\nCtrl+b :resize-pane -R 40 Resize current pane right by 40 cells.\nCtrl+b :resize-pane -U 40 Resize current pane upward by 40 cells.\nCtrl+b :resize-pane -t -L 40 Resize pane with id of 2 left by 40 cells.\nCtrl+b :resize-pane -t 2 40 Resize pane with id of 2 down by 40 cells.\n","description":"","id":22,"section":"cheatsheets","tags":null,"title":"tmux.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/tools/terminal/tmux.cheatsheet/"},{"content":"#-#\n#-# Keyboard shortcuts\n#-#\n#-# Gnome\nShortcut Description\nCtrl+Alt+F1 Switch to the first virtual terminal.\nCtrl+Alt+F[2..6] Select the different virtual terminals.\nCtrl+Alt+F7 Restore back to the current terminal session with X.\nCtrl+Alt+Backspace Restart GNOME.\nAlt+Tab Switch between open programs.\nCtrl+Alt+L Lock the screen.\nAlt+F1 Open the Applications menu.\nAlt+F2 Open the Run Application dialog box.\nAlt+F3 Open the Deskbar Applet.\nAlt+F4 Close the current window.\nAlt+F5 Unmaximize the current window.\nAlt+F7 Move the current window.\nAlt+F8 Resize the current window.\nAlt+F9 Minimize the current window.\nAlt+F10 Maximize the current window.\nAlt+Space Open the window menu.\nCtrl+Alt++ Switch to next X resolution.\nCtrl+Alt+- Switch to previous X resolution.\nCtrl+Alt+Left/Right Move to the next/previous workspace.\n#-# Nautilus\nShortcut Description\nShift+Ctrl+N Create new folder.\nCtrl+T Delete selected file(s) to trash.\nAlt+Enter Show file/folder properties.\nCtrl+1 Toggle view as icons.\nCtrl+2 Toggle view as list.\nShift+Right Open directory (only in list view).\nShift+Left Close directory (only in list view).\nCtrl+S Select pattern.\nF2 Rename file.\nCtrl+A Select all files and folders.\nCtrl+W Close window.\nCtrl+Shift+W Close all Nautilus windows.\nCtrl+R Reload Nautilus window.\nAlt+Up Open parent directory.\nAlt+Left Back.\nAlt+Right Forward.\nAlt+Home Go to Home folder.\nCtrl+L Go to location bar.\nF9 Show sidepane.\nCtrl+H Show hidden files.\nCtrl++ Zoom in.\nCtrl+- Zoom out.\nCtrl+0 Normal size.\n","description":"","id":23,"section":"cheatsheets","tags":null,"title":"ubuntu.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/os/ubuntu.cheatsheet/"},{"content":"#-#\n#-# Cursor movement\n#-#\nCommand Description\nh or ← move cursor left\nj or ↓ move cursor down\nk or → move cursor up\nl or ↑ move cursor right\nw jump forwards to the start of a word\nW jump forwards to the start of a word (words can contain punctuation)\ne jump forwards to the end of a word\nE jump forwards to the end of a word (words can contain punctuation)\nb jump backwards to the start of a word\nB jump backwards to the start of a word (words can contain punctuation)\n0 jump to the start of the line\n^ jump to the first non-blank character of the line\n$ jump to the end of the line\nG go to the last line of the document\n5G go to line 5\nTip: Prefix a cursor movement command with a number to repeat it.\nFor example, 4j moves down 4 lines.\n#-#\n#-# Insert mode - inserting/appending text\n#-#\nCommand Description\ni insert before the cursor\nI insert at the beginning of the line\na insert (append) after the cursor\nA insert (append) at the end of the line\no append (open) a new line below the current line\nO append (open) a new line above the current line\nea insert (append) at the end of the word\nEsc exit insert mode\n#-#\n#-# Editing\n#-#\nCommand Description\nr replace a single character\nJ join line below to the current one\ncc change (replace) entire line\ncw change (replace) to the end of the word\nc$ change (replace) to the end of the line\ns delete character and substitute text\nS delete line and substitute text (same as cc)\nxp transpose two letters (delete and paste)\nu undo\nCtrl + r redo\n. repeat last command\n#-#\n#-# Marking text (visual mode)\n#-#\nCommand Description\nv start visual mode, mark lines, then do a command (like y-yank)\nV start linewise visual mode\no move to other end of marked area\nCtrl + v start visual block mode\nO move to other corner of block\naw mark a word\nab a block with ()\naB a block with {}\nib inner block with ()\niB inner block with {}\nEsc exit visual mode\n#-#\n#-# Visual commands\n#-#\nCommand Description\nshift text right\r\u0026lt; shift text left\ny yank (copy) marked text\nd delete marked text\n~ switch case\n#-#\n#-# Cut and paste\n#-#\nCommand Description\nyy yank (copy) a line\n2yy yank (copy) 2 lines\nyw yank (copy) word\ny$ yank (copy) to end of line\np put (paste) the clipboard after cursor\nP put (paste) before cursor\ndd delete (cut) a line\n2dd delete (cut) 2 lines\ndw delete (cut) word\nD delete (cut) to the end of the line\nd$ delete (cut) to the end of the line\nx delete (cut) character\n#-#\n#-# Search and replace\n#-#\nCommand Description\n/pattern search for pattern\n?pattern search backward for pattern\nn repeat search in same direction\nN repeat search in opposite direction\n:%s/old/new/g replace all old with new throughout file\n:%s/old/new/gc replace all old with new throughout file with confirmations\n#-#\n#-# Working with multiple files\n#-#\nCommand Description\n:e filename edit a file in a new buffer\n:bnext or :bn go to the next buffer\n:bprev or :bp go to the previous buffer\n:bd delete a buffer (close a file)\n:sp filename open a file in a new buffer and split window\n:vsp filename open a file in a new buffer and vertically split window\nCtrl + w s split window\nCtrl + w w switch windows\nCtrl + w q quit a window\nCtrl + w v split window vertically\nCtrl + w h move cursor to the left window (vertical split)\nCtrl + w l move cursor to the right window (vertical split)\nCtrl + w j move cursor to the window below (horizontal split)\nCtrl + w k move cursor to the window above (horizontal split)\n#-#\n#-# Tabs\n#-#\nCommand Description\n:tabnew or :tabn filename open a file in a new tab\nCtrl + wT move the current split window into its own tab\ngt or :tabnext or :tabn move to the next tab\ngT or :tabprev or :tabp move to the previous tab\n#gt move to tab number #\n:tabmove # move current tab to the #th position (indexed from 0)\n:tabclose or :tabc close the current tab and all its windows\n:tabonly or :tabo close all tabs except for the current one\n#-#\n#-# Saving and Exiting\n#-#\nCommand Description\n:w write (save) the current file, but don\u0026rsquo;t exit\n:w filename write (save) as filename, but don\u0026rsquo;t exit\n:wq write (save) and quit\n:q quit (fails if there are unsaved changes)\n:q! quit and throw away unsaved changes\n","description":"","id":24,"section":"cheatsheets","tags":null,"title":"vim.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/ide/vim.cheatsheet/"},{"content":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni quae vitae quia id et impedit sapiente accusantium modi soluta nemo delectus iste quis corrupti dolores quisquam fuga, eius totam! Enim.\nCumque ipsam quae, ut repudiandae alias dicta reprehenderit, labore suscipit, tempore possimus esse odio at! Nobis, unde. Adipisci, est? Laborum fugit tempore quo id cupiditate nulla. Qui earum eos velit!\nAlias impedit doloremque aspernatur velit dolorem iusto consectetur perferendis pariatur, nobis praesentium neque voluptate laborum placeat accusantium quae? Voluptates libero vel suscipit commodi aperiam ad odio nisi ratione consectetur doloribus?\nAutem omnis quam porro, cumque harum deserunt, esse voluptates eius debitis eos non. Commodi amet deleniti libero quae ut! Numquam quisquam possimus praesentium quia autem facere similique non aperiam delectus!\nImpedit dolore error repellat, et culpa officiis dolorem quam earum possimus nihil deleniti iste nostrum quod inventore reprehenderit iure, veritatis sint aliquam eaque ratione totam! Nihil repellat amet adipisci? Placeat.\nAliquid nihil, sequi modi neque minus dicta delectus voluptas quaerat quia culpa dolore maiores tenetur cum ratione, molestiae dignissimos asperiores corporis nobis deleniti sunt obcaecati officia, doloremque eaque veritatis. Inventore?\nIn expedita ad nam itaque suscipit reprehenderit incidunt, ut, veritatis amet quia eos, impedit molestiae ullam illum alias quidem nostrum ipsa officiis. Ipsam quibusdam ratione aperiam officia adipisci soluta possimus.\nLaudantium fuga eos et sint nihil cumque, minus voluptates repellat nobis ipsam. Cupiditate voluptate neque ab itaque, recusandae veniam rerum quibusdam placeat ut porro quas repellat dolorum dignissimos numquam eum.\nEarum a cumque quasi, temporibus cum ullam reiciendis animi quod laborum porro laboriosam quo voluptatem dignissimos, magni facilis, at vero! Odio quae quibusdam dolorem, officiis necessitatibus repudiandae eos? Nulla, voluptas.\nNostrum cupiditate laborum expedita! Veniam pariatur ipsa iusto inventore deserunt ipsum enim nesciunt, sed asperiores saepe quibusdam aliquid, doloremque suscipit. Nihil tenetur laudantium enim! Adipisci iusto temporibus eius at aliquid?\n","description":"","id":25,"section":"posts","tags":null,"title":"Welcome","uri":"https://guinetn.github.io/posts/welcome-copy/"},{"content":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni quae vitae quia id et impedit sapiente accusantium modi soluta nemo delectus iste quis corrupti dolores quisquam fuga, eius totam! Enim.\nCumque ipsam quae, ut repudiandae alias dicta reprehenderit, labore suscipit, tempore possimus esse odio at! Nobis, unde. Adipisci, est? Laborum fugit tempore quo id cupiditate nulla. Qui earum eos velit!\nAlias impedit doloremque aspernatur velit dolorem iusto consectetur perferendis pariatur, nobis praesentium neque voluptate laborum placeat accusantium quae? Voluptates libero vel suscipit commodi aperiam ad odio nisi ratione consectetur doloribus?\nAutem omnis quam porro, cumque harum deserunt, esse voluptates eius debitis eos non. Commodi amet deleniti libero quae ut! Numquam quisquam possimus praesentium quia autem facere similique non aperiam delectus!\nImpedit dolore error repellat, et culpa officiis dolorem quam earum possimus nihil deleniti iste nostrum quod inventore reprehenderit iure, veritatis sint aliquam eaque ratione totam! Nihil repellat amet adipisci? Placeat.\nAliquid nihil, sequi modi neque minus dicta delectus voluptas quaerat quia culpa dolore maiores tenetur cum ratione, molestiae dignissimos asperiores corporis nobis deleniti sunt obcaecati officia, doloremque eaque veritatis. Inventore?\nIn expedita ad nam itaque suscipit reprehenderit incidunt, ut, veritatis amet quia eos, impedit molestiae ullam illum alias quidem nostrum ipsa officiis. Ipsam quibusdam ratione aperiam officia adipisci soluta possimus.\nLaudantium fuga eos et sint nihil cumque, minus voluptates repellat nobis ipsam. Cupiditate voluptate neque ab itaque, recusandae veniam rerum quibusdam placeat ut porro quas repellat dolorum dignissimos numquam eum.\nEarum a cumque quasi, temporibus cum ullam reiciendis animi quod laborum porro laboriosam quo voluptatem dignissimos, magni facilis, at vero! Odio quae quibusdam dolorem, officiis necessitatibus repudiandae eos? Nulla, voluptas.\nNostrum cupiditate laborum expedita! Veniam pariatur ipsa iusto inventore deserunt ipsum enim nesciunt, sed asperiores saepe quibusdam aliquid, doloremque suscipit. Nihil tenetur laudantium enim! Adipisci iusto temporibus eius at aliquid?\n","description":"","id":26,"section":"posts","tags":null,"title":"Welcome","uri":"https://guinetn.github.io/posts/welcome/"},{"content":"#-# Collection indicators\n\u0026lsquo;? \u0026rsquo; : Key indicator.\n\u0026lsquo;: \u0026rsquo; : Value indicator.\n\u0026lsquo;- \u0026rsquo; : Nested series entry indicator.\n\u0026lsquo;, \u0026rsquo; : Separate in-line branch entries.\n\u0026lsquo;[]\u0026rsquo; : Surround in-line series branch.\n\u0026lsquo;{}\u0026rsquo; : Surround in-line keyed branch.\n#-# Scalar indicators\n\u0026rsquo;\u0026rsquo;\u0026rsquo;\u0026rsquo; : Surround in-line unescaped scalar (\u0026rsquo;\u0026rsquo; escaped \u0026lsquo;).\n\u0026lsquo;\u0026quot;\u0026rsquo; : Surround in-line escaped scalar (see escape codes below).\n\u0026lsquo;|\u0026rsquo; : Block scalar indicator.\n\u0026lsquo;\u0026gt;\u0026rsquo; : Folded scalar indicator.\n\u0026lsquo;-\u0026rsquo; : Strip chomp modifier (\u0026rsquo;|-\u0026rsquo; or \u0026lsquo;\u0026gt;-\u0026rsquo;).\n\u0026lsquo;+\u0026rsquo; : Keep chomp modifier (\u0026rsquo;|+\u0026rsquo; or \u0026lsquo;\u0026gt;+\u0026rsquo;).\n1-9 : Explicit indentation modifier (\u0026rsquo;|1\u0026rsquo; or \u0026lsquo;\u0026gt;2\u0026rsquo;).\n# Modifiers can be combined (\u0026rsquo;|2-\u0026rsquo;, \u0026lsquo;\u0026gt;+1\u0026rsquo;).\n#-# Alias indicators\n\u0026lsquo;\u0026amp;\u0026rsquo; : Anchor property.\n\u0026lsquo;*\u0026rsquo; : Alias indicator.\n#-# Tag property (usually unspecified)\nnone : Unspecified tag (automatically resolved by application).\n\u0026lsquo;!\u0026rsquo; : Non-specific tag (by default, \u0026ldquo;!!map\u0026rdquo;/\u0026quot;!!seq\u0026quot;/\u0026quot;!!str\u0026quot;).\n\u0026lsquo;!foo\u0026rsquo; : Primary (by convention, means a local \u0026ldquo;!foo\u0026rdquo; tag).\n\u0026lsquo;!!foo\u0026rsquo; : Secondary (by convention, means \u0026ldquo;tag:yaml.org,2002:foo\u0026rdquo;).\n\u0026lsquo;!h!foo\u0026rsquo;: Requires \u0026ldquo;%TAG !h! \u0026rdquo; (and then means \u0026ldquo;foo\u0026rdquo;).\n\u0026lsquo;!\u0026rsquo;: Verbatim tag (always means \u0026ldquo;foo\u0026rdquo;).\n#-# Document indicators\n\u0026lsquo;%\u0026rsquo; : Directive indicator.\n\u0026lsquo;\u0026mdash;\u0026rsquo;: Document header.\n\u0026lsquo;\u0026hellip;\u0026rsquo;: Document terminator.\n#-# Misc indicators\n\u0026rsquo; #\u0026rsquo; : Throwaway comment indicator.\n\u0026lsquo;`@\u0026rsquo; : Both reserved for future use.\n#-# Special keys\n\u0026lsquo;=\u0026rsquo; : Default \u0026ldquo;value\u0026rdquo; mapping key.\n\u0026lsquo;\u0026laquo;\u0026rsquo; : Merge keys from another mapping.\n#-# Core types (default automatic tags)\n\u0026lsquo;!!map\u0026rsquo; : { Hash table, dictionary, mapping }\n\u0026lsquo;!!seq\u0026rsquo; : { List, array, tuple, vector, sequence }\n\u0026lsquo;!!str\u0026rsquo; : Unicode string\n#-# More types\n\u0026lsquo;!!set\u0026rsquo; : { cherries, plums, apples }\n\u0026lsquo;!!omap\u0026rsquo;: [ one: 1, two: 2 ]\n#-# Language Independent Scalar types\n{ ~, null } : Null (no value). [ 1234, 0x4D2, 02333 ] : [ Decimal int, Hexadecimal int, Octal int ] [ 1_230.15, 12.3015e+02 ]: [ Fixed float, Exponential float ] [ .inf, -.Inf, .NAN ] : [ Infinity (float), Negative, Not a number ] { Y, true, Yes, ON } : Boolean true { n, FALSE, No, off } : Boolean false ? !!binary \u0026gt; R0lG\u0026hellip;BADS= -\nBase 64 binary value.\n#-# Escape codes:\nNumeric : { \u0026ldquo;\\x12\u0026rdquo;: 8-bit, \u0026ldquo;\\u1234\u0026rdquo;: 16-bit, \u0026ldquo;\\U00102030\u0026rdquo;: 32-bit }\nProtective: { \u0026ldquo;\\\u0026rdquo;: \u0026lsquo;', \u0026ldquo;: \u0026lsquo;\u0026rdquo;\u0026rsquo;, \u0026ldquo;\\ \u0026ldquo;: \u0026rsquo; \u0026lsquo;, \u0026ldquo;\u0026lt;TAB\u0026gt;\u0026rdquo;: TAB }\nC : { \u0026ldquo;\\0\u0026rdquo;: NUL, \u0026ldquo;\\a\u0026rdquo;: BEL, \u0026ldquo;\\b\u0026rdquo;: BS, \u0026ldquo;\\f\u0026rdquo;: FF, \u0026ldquo;\\n\u0026rdquo;: LF, \u0026ldquo;\\r\u0026rdquo;: CR,\n\u0026ldquo;\\t\u0026rdquo;: TAB, \u0026ldquo;\\v\u0026rdquo;: VTAB }\nAdditional: { \u0026ldquo;\\e\u0026rdquo;: ESC, \u0026ldquo;_\u0026rdquo;: NBSP, \u0026ldquo;\\N\u0026rdquo;: NEL, \u0026ldquo;\\L\u0026rdquo;: LS, \u0026ldquo;\\P\u0026rdquo;: PS }\n","description":"","id":27,"section":"cheatsheets","tags":null,"title":"yaml.cheatsheet","uri":"https://guinetn.github.io/cheatsheets/database/code/language/yaml.cheatsheet/"},{"content":" Hi there, I'm Nicolas Guinet, a computer-science consultant based in Paris and London.\rLorem ipsum dolor sit amet consectetur adipisicing elit. Laborum doloribus, sit a, iusto quam beatae quis culpa vero natus porro atque similique tempora laudantium libero facilis, temporibus vel. Vitae, explicabo? ","description":"About Nicolas Guinet","id":28,"section":"","tags":null,"title":"About","uri":"https://guinetn.github.io/about/"},{"content":"This category would contain cheatsheets that cannot be made public.\n","description":"","id":29,"section":"cheatsheets","tags":null,"title":"","uri":"https://guinetn.github.io/cheatsheets/database/local/readme/"}]